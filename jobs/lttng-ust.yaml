---
## Defaults
- defaults:
    name: lttng-ust
    description: |
      LTTng-UST, the Linux Trace Toolkit Next Generation Userspace Tracer, is a
      port of the low-overhead tracing capabilities of the LTTng kernel tracer
      to user-space. The library "liblttng-ust" enables tracing of
      applications and libraries.

      <p>Job is managed by Jenkins Job Builder.</p>

    project-type: freestyle

    wrappers:
      - ansicolor: &lttng-ust_wrapper_ansicolor_defaults
          colormap: xterm
      - timeout: &lttng-ust_wrapper_timeout_defaults
          timeout: 20
          fail: true
          type: no-activity
          write-description: "<h1 style=\"color:red\">This build failed due to timeout.</h1>"
      - timestamps
      - workspace-cleanup

    scm:
      - git:
          url: https://github.com/{github_user}/{github_name}.git
          browser: githubweb
          browser-url: https://github.com/{github_user}/{github_name}
          branches:
            - origin/{version}
          basedir: src/lttng-ust
          skip-tag: true

    triggers:
      - pollscm:
          cron: "@hourly"

    properties:
      - inject:
          properties-content: |
            PROJECT_NAME=lttng-ust
      - build-discarder:
          num-to-keep: 10
          artifact-num-to-keep: 2
      - github:
          url: https://github.com/{github_user}/{github_name}

    # Variables
    filter: ''
    java_agents: 'true'  # when building with the agents config, include java agents
    java_preferred_jdk: 'default'
    python: ''
    touchstone: ''


## Anchors
- _lttng-ust_matrix_axes_defaults: &lttng-ust_matrix_axes_defaults
    name: 'lttng-ust_matrix_axes_defaults'
    project-type: matrix
    node: 'master' # Applies only to matrix flyweight task
    execution-strategy: &lttng-ust_matrix_execution-strategy_defaults
      combination-filter: '{filter}'
      touchstone:
        expr: '{touchstone}'
        result: unstable
    axes:
      - axis: &lttng-ust_matrix_axis_platform
         type: slave
         name: platform
         values: '{obj:platforms}'
      - axis: &lttng-ust_matrix_axis_conf
         type: user-defined
         name: conf
         values: '{obj:confs}'
      - axis: &lttng-ust_matrix_axis_build
         type: user-defined
         name: build
         values: '{obj:builds}'
      - axis: &lttng-ust_matrix_axis_liburcu_version
         type: user-defined
         name: liburcu_version
         values: '{obj:liburcu_versions}'

- _lttng-ust_matrix_axes_review_lttng-tools: &lttng-ust_matrix_axes_review_lttng-tools
    name: 'lttng-ust_matrix_axes_review_lttng-tools'
    project-type: matrix
    node: 'master' # Applies only to matrix flyweight task
    execution-strategy: *lttng-ust_matrix_execution-strategy_defaults
    axes:
      - axis: *lttng-ust_matrix_axis_platform
      - axis: *lttng-ust_matrix_axis_conf
      - axis: *lttng-ust_matrix_axis_build

- _lttng-ust_steps_copyartifact_defaults:
    name: 'lttng-ust_steps_copyartifact_defaults'
    steps:
      - copyartifact: &lttng-ust_steps_copyartifact_defaults
          project: ''
          which-build: last-successful
          stable: false
          filter: 'build/**'
          target: 'deps'
          do-not-fingerprint: true

- _lttng-ust_builders_defaults: &lttng-ust_builders_defaults
    name: 'lttng-ust_builders_defaults'
    builders:
      # Generate a properties file to add additionnal env
      - shell: |
          #!/bin/bash
          set -exu
          # Select the liburcu conf based on the current conf
          case "$conf" in
            debug-rcu|tls_fallback)
            liburcu_conf=$conf
            ;;
            *)
            liburcu_conf=std
            ;;
          esac
          echo "liburcu_conf=$liburcu_conf" > env.properties
          echo "LTTNG_UST_JAVA_AGENTS={java_agents|true}" >> env.properties
          echo "java_preferred_jdk={java_preferred_jdk}" >> env.properties
          if [ "{python}" != "" ]; then
            echo "PYTHON={python}" >> env.properties
          fi

      # Inject the additionnal env early to use them in the copyartifact step
      - inject:
          properties-file: env.properties

      - copyartifact:
          <<: *lttng-ust_steps_copyartifact_defaults
          project:
            !j2: |
              {{job_prefix}}liburcu_{%- raw -%}${liburcu_version}{%- endraw -%}
              _{{cctype|default(buildtype)}}/platform={%- raw %}${platform}{%- endraw -%}
              ,build=std,conf={%- raw -%}${liburcu_conf}{%- endraw -%}
              {%- if ccs|default(false) %},cc={%- raw -%}${cc}{%- endraw -%}{% endif -%}

      # Run the build
      - shell:
         !include-raw-verbatim:
           - scripts/common/print.sh
           - scripts/lttng-ust/build.sh
           - scripts/common/clean-build-dir.sh

- _lttng-ust_builders_review_lttng-tools: &lttng-ust_builders_review_lttng-tools
    name: 'lttng-ust_builders_review_lttng-tools'

    builders:
      # Generate a properties file to add additional env
      - shell: |
          #!/bin/bash
          set -exu
          # Select the liburcu conf based on the current conf
          case "$conf" in
            debug-rcu|tls_fallback)
            liburcu_conf=$conf
            ;;
            *)
            liburcu_conf=std
            ;;
          esac
          echo "liburcu_conf=$liburcu_conf" >> env.properties
          # Select the liburcu version based on the gerrit branch
          case "$GERRIT_BRANCH" in
            master)
            liburcu_version=master
            ;;
            *)
            liburcu_version={liburcu_versions}
            ;;
          esac
          echo "liburcu_version=$liburcu_version" >> env.properties
          echo "LTTNG_UST_JAVA_AGENTS={java_agents|true}" >> env.properties
          echo "java_preferred_jdk={java_preferred_jdk}" >> env.properties
          if [ "{python}" != "" ]; then
            echo "PYTHON={python}" >> env.properties
          fi

      # Inject the additionnal env early to use them in the copyartifact step
      - inject:
          properties-file: env.properties

      - copyartifact:
          <<: *lttng-ust_steps_copyartifact_defaults
          project:
            !j2: |
              liburcu_{%- raw -%}${liburcu_version}{%- endraw -%}
              _{{cctype|default(buildtype)}}/platform={%- raw %}${platform}{%- endraw -%}
              ,build=std,conf={%- raw -%}${liburcu_conf}{%- endraw -%}
              {%- if ccs|default(false) %},cc={%- raw -%}${cc}{%- endraw -%}{% endif -%}

      - copyartifact:
          <<: *lttng-ust_steps_copyartifact_defaults
          project: 'babeltrace_{babeltrace_version}_{buildtype}/platform=${{platform}},conf=std,build=std'

      - shell: |
           #!/bin/bash
           set -exu
           git clone -b "$GERRIT_BRANCH" https://review.lttng.org/lttng-tools src/lttng-tools

      - shell:
         !include-raw-verbatim:
           - scripts/common/print.sh
           - scripts/lttng-ust/build.sh

      - shell:
         !include-raw-verbatim:
           - scripts/lttng-tools/gerrit-install-deps.sh

      - shell:
         !include-raw-verbatim:
           - scripts/common/print.sh
           - scripts/lttng-tools/build.sh

- _lttng-ust_publishers_defaults: &lttng-ust_publishers_defaults
    name: 'lttng-ust_publishers_defaults'
    publishers:
      - tap: &lttng-ust_publisher_tap_defaults
          results: 'tap/**/*.log'
          fail-if-no-results: true
          failed-tests-mark-build-as-failure: true
          include-comment-diagnostics: true
          output-tap-to-console: false
          todo-is-failure: false
      - raw: &lttng-ust_publisher_warnings-ng_defaults
          xml: |
            <io.jenkins.plugins.analysis.core.steps.IssuesRecorder plugin="warnings-ng">
              <analysisTools>
                <io.jenkins.plugins.analysis.warnings.Gcc4>
                  <id/>
                  <name/>
                  <jenkins plugin="plugin-util-api"/>
                  <pattern/>
                  <reportEncoding/>
                  <skipSymbolicLinks>false</skipSymbolicLinks>
                </io.jenkins.plugins.analysis.warnings.Gcc4>
              </analysisTools>
              <sourceCodeEncoding/>
              <sourceDirectory/>
              <sourceDirectories/>
              <ignoreQualityGate>false</ignoreQualityGate>
              <ignoreFailedBuilds>true</ignoreFailedBuilds>
              <failOnError>false</failOnError>
              <healthy>0</healthy>
              <unhealthy>0</unhealthy>
              <minimumSeverity plugin="analysis-model-api">
                <name>LOW</name>
              </minimumSeverity>
              <filters/>
              <isEnabledForFailure>true</isEnabledForFailure>
              <isAggregatingResults>true</isAggregatingResults>
              <isBlameDisabled>false</isBlameDisabled>
              <skipPublishingChecks>true</skipPublishingChecks>
              <publishAllIssues>false</publishAllIssues>
              <qualityGates>
                <io.jenkins.plugins.analysis.core.util.QualityGate>
                  <threshold>1</threshold>
                  <type>TOTAL</type>
                  <status>WARNING</status>
                </io.jenkins.plugins.analysis.core.util.QualityGate>
              </qualityGates>
              <trendChartType>AGGREGATION_TOOLS</trendChartType>
              <scm/>
            </io.jenkins.plugins.analysis.core.steps.IssuesRecorder>
      - archive: &lttng-ust_publisher_archive_defaults
          artifacts: 'build/**,tap/**,log/**'
          follow-symlinks: true
          allow-empty: false
      - workspace-cleanup: &lttng-ust_publisher_workspace-cleanup_defaults
          clean-if:
            - failure: false
      - ircbot: &lttng-ust_publisher_ircbot_defaults
          strategy: statechange-only
          message-type: summary
          matrix-notifier: only-parent
      - email-ext: &lttng-ust_publisher_email-ext_defaults
          recipients: '{obj:email_to}'
          reply-to: ci-notification@lists.lttng.org
          always: false
          unstable: false
          first-failure: true
          first-unstable: true
          not-built: false
          aborted: false
          regression: false
          failure: false
          second-failure: false
          improvement: false
          still-failing: false
          success: false
          fixed: false
          fixed-unhealthy: true
          still-unstable: false
          pre-build: false
          matrix-trigger: only-parent
          send-to:
            - recipients

- _lttng-ust_publishers_review: &lttng-ust_publishers_review
    name: 'lttng-ust_publishers_review'
    publishers:
      - tap: *lttng-ust_publisher_tap_defaults
      # Fail job on any compiler warnings
      - raw:
          xml: |
            <io.jenkins.plugins.analysis.core.steps.IssuesRecorder plugin="warnings-ng">
              <analysisTools>
                <io.jenkins.plugins.analysis.warnings.Gcc4>
                  <id/>
                  <name/>
                  <jenkins plugin="plugin-util-api"/>
                  <pattern/>
                  <reportEncoding/>
                  <skipSymbolicLinks>false</skipSymbolicLinks>
                </io.jenkins.plugins.analysis.warnings.Gcc4>
              </analysisTools>
              <sourceCodeEncoding/>
              <sourceDirectory/>
              <sourceDirectories/>
              <ignoreQualityGate>false</ignoreQualityGate>
              <ignoreFailedBuilds>true</ignoreFailedBuilds>
              <failOnError>false</failOnError>
              <healthy>0</healthy>
              <unhealthy>0</unhealthy>
              <minimumSeverity plugin="analysis-model-api">
                <name>LOW</name>
              </minimumSeverity>
              <filters/>
              <isEnabledForFailure>true</isEnabledForFailure>
              <isAggregatingResults>true</isAggregatingResults>
              <isBlameDisabled>false</isBlameDisabled>
              <skipPublishingChecks>true</skipPublishingChecks>
              <publishAllIssues>false</publishAllIssues>
              <qualityGates>
                <io.jenkins.plugins.analysis.core.util.QualityGate>
                  <threshold>1</threshold>
                  <type>TOTAL</type>
                  <status>FAILED</status>
                </io.jenkins.plugins.analysis.core.util.QualityGate>
              </qualityGates>
              <trendChartType>AGGREGATION_TOOLS</trendChartType>
              <scm/>
            </io.jenkins.plugins.analysis.core.steps.IssuesRecorder>
      - archive: *lttng-ust_publisher_archive_defaults
      - workspace-cleanup: *lttng-ust_publisher_workspace-cleanup_defaults

## Templates
- job-template:
    name: '{job_prefix}lttng-ust_{version}_{buildtype}'
    defaults: lttng-ust

    <<: *lttng-ust_matrix_axes_defaults
    <<: *lttng-ust_builders_defaults
    <<: *lttng-ust_publishers_defaults

- job-template:
    name: '{job_prefix}lttng-ust_{version}_{cctype}'
    defaults: lttng-ust
    <<: *lttng-ust_matrix_axes_defaults
    axes:
      - axis:
          <<: *lttng-ust_matrix_axis_platform
      - axis:
          <<: *lttng-ust_matrix_axis_conf
      - axis:
          <<: *lttng-ust_matrix_axis_build
      - axis:
          <<: *lttng-ust_matrix_axis_liburcu_version
      - axis:
         type: user-defined
         name: cc
         values: '{obj:ccs}'

    <<: *lttng-ust_builders_defaults
    <<: *lttng-ust_publishers_defaults

- job-template:
    name: dev_review_lttng-ust_{version}_{buildtype}
    defaults: lttng-ust
    concurrent: true

    scm: &lttng-ust_dev_review_scm
      - git:
          url: https://review.lttng.org/lttng-ust
          refspec: 'refs/changes/*:refs/changes/*'
          branches:
            - '$GERRIT_REFSPEC'
          basedir: src/lttng-ust
          skip-tag: true

    triggers: &lttng-ust_dev_review_triggers
      - gerrit: &lttng-ust_trigger_gerrit_defaults
          trigger-on:
            - comment-added-event:
                approval-category: 'CI-Build'
                approval-value: 1
          projects:
            - project-compare-type: 'PLAIN'
              project-pattern: 'lttng-ust'
              branches:
                - branch-compare-type: 'PLAIN'
                  branch-pattern: '{version}'

    <<: *lttng-ust_matrix_axes_defaults
    <<: *lttng-ust_builders_defaults
    <<: *lttng-ust_publishers_review

    properties: &lttng-ust_dev_review_properties
      - inject:
          properties-content: |
            PROJECT_NAME=lttng-ust
      - build-discarder:
          days-to-keep: 1
      - throttle:
          option: 'category'
          categories:
            - 'gerrit-{buildtype}'

- job-template:
    name: 'dev_review_lttng-ust_{version}_{cctype}'
    defaults: lttng-ust
    concurrent: true
    scm: *lttng-ust_dev_review_scm
    triggers: *lttng-ust_dev_review_triggers
    properties: *lttng-ust_dev_review_properties
    <<: *lttng-ust_matrix_axes_defaults
    axes:
      - axis:
          <<: *lttng-ust_matrix_axis_platform
      - axis:
          <<: *lttng-ust_matrix_axis_conf
      - axis:
          <<: *lttng-ust_matrix_axis_build
      - axis:
          <<: *lttng-ust_matrix_axis_liburcu_version
      - axis:
         type: user-defined
         name: cc
         values: '{obj:ccs}'
    <<: *lttng-ust_builders_defaults
    <<: *lttng-ust_publishers_review

- job-template:
    name: dev_review_lttng-ust_lttng-tools_{version}_{buildtype}
    defaults: lttng-ust
    concurrent: true

    scm:
      - git:
          url: https://review.lttng.org/lttng-ust
          refspec: 'refs/changes/*:refs/changes/*'
          branches:
            - '$GERRIT_REFSPEC'
          basedir: src/lttng-ust
          skip-tag: true

    triggers:
      - gerrit: *lttng-ust_trigger_gerrit_defaults

    <<: *lttng-ust_matrix_axes_review_lttng-tools
    <<: *lttng-ust_builders_review_lttng-tools
    <<: *lttng-ust_publishers_review

    properties:
      - inject:
          properties-content: |
            PROJECT_NAME=lttng-ust
      - build-discarder:
          days-to-keep: 1
      - throttle:
          option: 'category'
          categories:
            - 'gerrit-{buildtype}'


- job-template:
    name: lttng-ust_{version}_scan-build
    defaults: lttng-ust
    node: 'deb12-amd64'

    triggers:
      - pollscm:
          cron: "@daily"

    builders:
      - copyartifact:
          <<: *lttng-ust_steps_copyartifact_defaults
          project: liburcu_master_linuxbuild/platform=deb12-amd64,conf=std,build=std
      - shell:
          !include-raw-verbatim: scripts/common/scan-build.sh

    publishers:
      - html-publisher:
          name: 'HTML Report'
          dir: 'scan-build-archive/'
          files: 'index.html'
      - workspace-cleanup: *lttng-ust_publisher_workspace-cleanup_defaults
      - ircbot: *lttng-ust_publisher_ircbot_defaults


- job-template:
    name: lttng-ust_{version}_coverity
    defaults: lttng-ust
    node: 'deb12-amd64'

    triggers:
      - pollscm:
          cron: "@daily"

    wrappers:
      - ansicolor: *lttng-ust_wrapper_ansicolor_defaults
      - timeout: *lttng-ust_wrapper_timeout_defaults
      - timestamps
      - workspace-cleanup
      - credentials-binding:
          - username-password-separated:
              credential-id: lttng-ust_coverity_token
              username: COVERITY_SCAN_PROJECT_NAME
              password: COVERITY_SCAN_TOKEN

    builders:
      - copyartifact:
          <<: *lttng-ust_steps_copyartifact_defaults
          project: liburcu_master_linuxbuild/platform=deb12-amd64,conf=std,build=std
      - shell:
          !include-raw-verbatim: scripts/common/coverity.sh

    publishers:
      - archive:
          artifacts: 'analysis-results.tgz,cov-int/**'
          allow-empty: false
      - workspace-cleanup: *lttng-ust_publisher_workspace-cleanup_defaults
      - ircbot: *lttng-ust_publisher_ircbot_defaults

- job-template:
    name: dev_review_lttng-ust-java-tests_{version}_{buildtype}
    defaults: lttng-ust
    description: |
      Review tests for LTTng-UST's Java agent.
      <p>Job is managed by Jenkins Job Builder.</p>
    project-type: matrix
    axes:
      - axis:
          <<: *lttng-ust_matrix_axis_platform
    concurrent: true
    scm:
      - git:
          url: https://review.lttng.org/lttng-ust-java-tests
          refspec: 'refs/changes/*:refs/changes/*'
          branches:
            - '$GERRIT_REFSPEC'
          basedir: 'src/lttng-ust-java-tests'
          skip-tag: true
    triggers:
      - gerrit:
          <<: *lttng-ust_trigger_gerrit_defaults
          projects:
            - project-compare-type: 'PLAIN'
              project-pattern: 'lttng-ust-java-tests'
              branches:
                - branch-compare-type: 'PLAIN'
                  branch-pattern: '{version}'
    builders:
      - copyartifact:
          <<: *lttng-ust_steps_copyartifact_defaults
          project: 'liburcu_{liburcu_versions[0]}_{buildtype}/platform=${{platform}},conf=std,build=std'
      - copyartifact:
          <<: *lttng-ust_steps_copyartifact_defaults
          project: 'lttng-ust_{lttngust_versions[0]}_{buildtype}/liburcu_version={liburcu_versions[0]},platform=${{platform}},conf=agents,build=std'
      - copyartifact:
          <<: *lttng-ust_steps_copyartifact_defaults
          project: 'lttng-tools_{lttngtools_versions[0]}_{buildtype}/babeltrace_version={babeltrace_versions[0]},liburcu_version={liburcu_versions[0]},platform=${{platform}},conf=agents,build=std'
      - copyartifact:
          <<: *lttng-ust_steps_copyartifact_defaults
          project: 'babeltrace_{babeltrace_versions[0]}_{buildtype}/platform=${{platform}},conf=std,build=std'
      - shell:
          !include-raw-verbatim: scripts/lttng-ust/lttng-ust-java-tests.sh
    properties:
      - inject:
          properties-content: |
            PROJECT_NAME=lttng-ust-java-tests
      - build-discarder:
          days-to-keep: 1
      - throttle:
          option: 'category'
          categories:
            - 'gerrit-{buildtype}'
    publishers:
      - archive:
          artifacts: 'log/lttng-sessiond.log'
          allow-empty: false
      - junit:
          results: 'src/lttng-ust-java-tests/**/target/failsafe-reports/*.xml'
      - workspace-cleanup

## Views
- view-template:
    name: 'LTTng-ust'
    view-type: categorized
    regex: 'lttng-ust[-_].*'
    regex_to_ignore_on_color_computing: '.*benchmark.*'
    categorization_criteria:
      - group_regex: '.*_master_*'
        naming_rule: 'Master'
      - group_regex: '.*_stable-2.14_.*'
        naming_rule: 'Stable 2.14'
      - group_regex: '.*_stable-2.13_.*'
        naming_rule: 'Stable 2.13'
      - group_regex: '.*_stable-2.12_.*'
        naming_rule: 'Stable 2.12'

## Projects
- project:
    name: lttng-ust
    job_prefix: ''
    github_user: lttng
    github_name: lttng-ust
    email_to: 'ci-notification@lists.lttng.org, cc:mathieu.desnoyers@efficios.com'
    liburcu_versions: !!python/tuple [stable-0.14, stable-0.15, master]
    platforms: !!python/tuple [deb12-amd64, deb13-amd64]
    jobs:
      ## Master ##
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: linuxbuild
          version: master
          builds: !!python/tuple [std, dist, oot, oot-dist]
          confs: !!python/tuple [std, agents, debug-rcu, tls_fallback]
          filter: '(build=="std") || ((liburcu_version=="master" && (conf=="std" || conf=="agents")))'
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          touchstone: ''
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: portbuild
          version: master
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb12-ppc64el, deb13-riscv64, deb12-s390x, deb12-i386]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std, agents]
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: slesbuild
          version: master
          platforms: !!python/tuple [sles12sp5-amd64, sles15sp5-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: elbuild
          version: master
          platforms: !!python/tuple [el8-amd64, el9-amd64, el8-arm64, el9-arm64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          java_agents: 'false'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: yoctobuild
          version: master
          platforms: !!python/tuple [yocto23-powerpc, yocto40-powerpc, yocto40-ppc64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: yoctobuild_extended
          version:
            - master
            - stable-2.13
            - stable-2.14
          platforms: !!python/tuple [yocto33-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.12, stable-0.13, stable-0.14, stable-0.15, master]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: freebsdbuild
          version: master
          platforms: !!python/tuple [freebsd-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.15, master]
      - '{job_prefix}lttng-ust_{version}_{cctype}':
          buildtype: linuxbuild
          cctype: clangbuild
          ccs: !!python/tuple [clang-13, clang-14, clang-15, clang-16]
          version: master
          platforms: !!python/tuple [deb12-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std, agents]
      - 'lttng-ust_{version}_scan-build':
          version: master
      - 'lttng-ust_{version}_coverity':
          version: master

      ## Stable 2.14 @@
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: linuxbuild
          version: stable-2.14
          builds: !!python/tuple [std, dist, oot, oot-dist]
          confs: !!python/tuple [std, agents, debug-rcu, tls_fallback]
          filter: '(build=="std") || ((liburcu_version=="master" && (conf=="std" || conf=="agents")))'
          liburcu_versions: !!python/tuple [stable-0.14, stable-0.15, master]
          touchstone: ''
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: portbuild
          version: stable-2.14
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb12-ppc64el, deb13-riscv64, deb12-s390x, deb12-i386]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std, agents]
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: slesbuild
          version: stable-2.14
          platforms: !!python/tuple [sles12sp5-amd64, sles15sp5-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.14, stable-0.15, master]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: elbuild
          version: stable-2.14
          platforms: !!python/tuple [el8-amd64, el9-amd64, el8-arm64, el9-arm64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          java_agents: 'false'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: yoctobuild
          version: stable-2.14
          platforms: !!python/tuple [yocto23-powerpc, yocto40-powerpc, yocto40-ppc64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std]
          liburcu_versions: !!python/tuple [stable-0.14, stable-0.15, master]
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: freebsdbuild
          version: stable-2.14
          platforms: !!python/tuple [freebsd-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.15, master]
      - '{job_prefix}lttng-ust_{version}_{cctype}':
          buildtype: linuxbuild
          cctype: clangbuild
          ccs: !!python/tuple [clang-13, clang-14, clang-15, clang-16]
          version: stable-2.14
          platforms: !!python/tuple [deb12-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std, agents]
      - 'lttng-ust_{version}_scan-build':
          version: stable-2.14
      - 'lttng-ust_{version}_coverity':
          version: stable-2.14

      ## Stable 2.13 ##
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: linuxbuild
          version: stable-2.13
          builds: !!python/tuple [std, dist, oot, oot-dist]
          confs: !!python/tuple [std, agents, debug-rcu, tls_fallback]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          filter: '(build=="std") || ((liburcu_version=="stable-0.13" && (conf=="std" || conf=="agents")))'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: portbuild
          version: stable-2.13
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb12-ppc64el, deb13-riscv64, deb12-s390x, deb12-i386]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std, agents]
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: slesbuild
          version: stable-2.13
          platforms: !!python/tuple [sles12sp5-amd64, sles15sp5-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: elbuild
          version: stable-2.13
          platforms: !!python/tuple [el8-amd64, el9-amd64, el8-arm64, el9-arm64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          java_agents: 'false'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: yoctobuild
          version: stable-2.13
          platforms: !!python/tuple [yocto23-powerpc, yocto40-powerpc, yocto40-ppc64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
      - '{job_prefix}lttng-ust_{version}_{cctype}':
          buildtype: linuxbuild
          cctype: clangbuild
          ccs: !!python/tuple [clang-13, clang-14, clang-15, clang-16]
          version: stable-2.13
          platforms: !!python/tuple [deb12-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std, agents]
      - 'lttng-ust_{version}_scan-build':
          version: stable-2.13

      ## Stable 2.12 ##
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: linuxbuild
          version: stable-2.12
          builds: !!python/tuple [std, dist, oot, oot-dist]
          confs: !!python/tuple [std, agents, debug-rcu, tls_fallback]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          filter: '(build=="std") || ((liburcu_version=="stable-0.13" && (conf=="std" || conf=="agents")))'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: portbuild
          version: stable-2.12
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb12-ppc64el, deb13-riscv64, deb12-s390x, deb12-i386]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std, agents]
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: slesbuild
          version: stable-2.12
          platforms: !!python/tuple [sles12sp5-amd64, sles15sp5-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: elbuild
          version: stable-2.12
          platforms: !!python/tuple [el8-amd64, el9-amd64, el8-arm64, el9-arm64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          java_agents: 'false'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: yoctobuild
          version: stable-2.12
          platforms: !!python/tuple [yocto23-powerpc, yocto40-powerpc, yocto40-ppc64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [std]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: yoctobuild_extended
          version: stable-2.12
          platforms: !!python/tuple [yocto33-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.11, stable-0.12, stable-0.13, stable-0.14, stable-0.15, master]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-ust_{version}_{buildtype}':
          buildtype: elbuild_extended
          version: stable-2.12
          java_agents: 'false'
          platforms: !!python/tuple [el8-amd64, el9-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.12, stable-0.13]
      - 'lttng-ust_{version}_scan-build':
          version: stable-2.12

- project:
    name: review-lttng-ust
    job_prefix: ''
    github_user: lttng
    github_name: lttng-ust
    liburcu_versions: !!python/tuple [stable-0.14, stable-0.15, master]
    platforms: !!python/tuple [deb12-amd64, deb13-amd64]
    jobs:
      ## master ##
      - 'dev_review_lttng-ust_{version}_{buildtype}':
          version: master
          buildtype: linuxbuild
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, agents]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          touchstone: '(build == "std") && (conf == "std")'
      - 'dev_review_lttng-ust_lttng-tools_{version}_{buildtype}':
          version: master
          buildtype: linuxbuild
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, agents]
          babeltrace_version: stable-2.0
      - 'dev_review_lttng-ust_lttng-tools_{version}_{buildtype}':
          version: master
          buildtype: slesbuild
          platforms: !!python/tuple [sles12sp5-amd64, sles15sp5-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          babeltrace_version: stable-2.0
          java_preferred_jdk: '8'
      - 'dev_review_lttng-ust_{version}_{buildtype}':
          version: master
          buildtype: portbuild
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb12-ppc64el, deb12-s390x, deb12-i386]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          touchstone: '(platform == "deb12-i386")'
      - 'dev_review_lttng-ust_{version}_{buildtype}':
          version: master
          buildtype: freebsdbuild
          platforms: !!python/tuple [freebsd-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
      - 'dev_review_lttng-ust_{version}_{cctype}':
          cctype: clangbuild
          ccs: ['clang-13', 'clang-14', 'clang-15', 'clang-16']
          version: master
          buildtype: linuxbuild
          platforms: !!python/tuple [deb12-amd64]
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, agents]
          babeltrace_version: stable-2.0

      ## stable 2.14 ##
      - 'dev_review_lttng-ust_{version}_{buildtype}':
          version: stable-2.14
          buildtype: linuxbuild
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, agents]
          liburcu_versions: !!python/tuple [stable-0.14, stable-0.15, master]
          touchstone: '(build == "std") && (conf == "std")'
      - 'dev_review_lttng-ust_lttng-tools_{version}_{buildtype}':
          version: stable-2.14
          buildtype: linuxbuild
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, agents]
          babeltrace_version: stable-2.1
      - 'dev_review_lttng-ust_lttng-tools_{version}_{buildtype}':
          version: stable-2.14
          buildtype: slesbuild
          platforms: !!python/tuple [sles12sp5-amd64, sles15sp5-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.14, stable-0.15, master]
          babeltrace_version: stable-2.1
          java_preferred_jdk: '8'
      - 'dev_review_lttng-ust_{version}_{buildtype}':
          version: stable-2.14
          buildtype: portbuild
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb12-ppc64el, deb12-s390x, deb12-i386]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          touchstone: '(platform == "deb12-i386")'
      - 'dev_review_lttng-ust_{version}_{buildtype}':
          version: stable-2.14
          buildtype: freebsdbuild
          platforms: !!python/tuple [freebsd-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
      - 'dev_review_lttng-ust_{version}_{cctype}':
          cctype: clangbuild
          ccs: ['clang-13', 'clang-14', 'clang-15', 'clang-16']
          version: stable-2.14
          buildtype: linuxbuild
          platforms: !!python/tuple [deb12-amd64]
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, agents]
          babeltrace_version: stable-2.1

      ## Stable 2.13 ##
      - 'dev_review_lttng-ust_{version}_{buildtype}':
          version: stable-2.13
          buildtype: linuxbuild
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, agents]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          touchstone: '(build == "std") && (conf == "std")'
      - 'dev_review_lttng-ust_lttng-tools_{version}_{buildtype}':
          version: stable-2.13
          buildtype: linuxbuild
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, agents]
          babeltrace_version: stable-2.0
      - 'dev_review_lttng-ust_{version}_{buildtype}':
          version: stable-2.13
          buildtype: portbuild
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb12-ppc64el, deb12-s390x, deb12-i386]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          touchstone: '(platform == "deb12-i386")'
      - 'dev_review_lttng-ust_lttng-tools_{version}_{buildtype}':
          version: stable-2.13
          buildtype: slesbuild
          platforms: !!python/tuple [sles12sp5-amd64, sles15sp5-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          babeltrace_version: stable-2.0
          java_preferred_jdk: '8'

      ## Stable 2.12 ##
      - 'dev_review_lttng-ust_{version}_{buildtype}':
          version: stable-2.12
          buildtype: linuxbuild
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, agents]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          touchstone: '(build == "std") && (conf == "std")'
      - 'dev_review_lttng-ust_lttng-tools_{version}_{buildtype}':
          version: stable-2.12
          buildtype: linuxbuild
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, agents]
          babeltrace_version: stable-2.0
      - 'dev_review_lttng-ust_{version}_{buildtype}':
          version: stable-2.12
          buildtype: portbuild
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb12-ppc64el, deb12-s390x, deb12-i386]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          touchstone: '(platform == "deb12-i386")'
      - 'dev_review_lttng-ust_lttng-tools_{version}_{buildtype}':
          version: stable-2.12
          buildtype: slesbuild
          platforms: !!python/tuple [sles12sp5-amd64, sles15sp5-amd64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [agents]
          liburcu_versions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          babeltrace_version: stable-2.0
          java_preferred_jdk: '8'

- project:
    name: review-lttng-ust-java
    job_prefix: ''
    github_user: lttng
    github_name: lttng-ust-java-tests
    #
    groups: '!domain:log4j2'
    java_versions: !!python/tuple [java-11-openjdk]
    touchstone: ''
    version: master
    #
    babeltrace_versions: !!python/tuple [stable-2.0]
    liburcu_versions: !!python/tuple [master]
    lttngtools_versions: !!python/tuple [master]
    lttngust_versions: !!python/tuple [master]
    #
    jobs:
      - 'dev_review_lttng-ust-java-tests_{version}_{buildtype}':
          buildtype: linuxbuild
          platforms: !!python/tuple [deb12-amd64, deb13-amd64]
      - 'dev_review_lttng-ust-java-tests_{version}_{buildtype}':
          buildtype: slesbuild
          platforms: !!python/tuple [sles12sp5-amd64, sles15sp5-amd64]
          java_preferred_jdk: '8'

- project:
    name: lttng-ust-views
    views:
      - LTTng-ust
