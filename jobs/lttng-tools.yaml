---

## Defaults
- defaults: &lttng-tools-defaults
    name: lttng-tools
    description: |
      The lttng-tools project provides a session daemon (lttng-sessiond)
      that acts as a tracing registry, the "lttng" command line for tracing
      control, a lttng-ctl library for tracing control and a lttng-relayd
      for network streaming.

      <p>Job is managed by Jenkins Job Builder.</p>

    project-type: freestyle

    wrappers:
      - ansicolor: &lttng-tools_wrapper_ansicolor_defaults
          colormap: xterm
      - timeout: &lttng-tools_wrapper_timeout_defaults
          timeout: '{timeout}'
          abort: true
          type: no-activity
          write-description: "<h1 style=\"color:red\">This build failed due to timeout.</h1>"
      - timestamps
      - workspace-cleanup
      - raw: &lttng-tools_wrapper_proc-cleaner_defaults
          xml: !j2: |
            {% if wrapper_proc_cleaner %}
            <org.jenkinsci.plugins.proccleaner.PreBuildCleanup plugin="proc-cleaner-plugin">
              <cleaner class="org.jenkinsci.plugins.proccleaner.PsCleaner">
                <killerType>org.jenkinsci.plugins.proccleaner.PsAllKiller</killerType>
                <killer class="org.jenkinsci.plugins.proccleaner.PsAllKiller"/>
                <switchedOff>false</switchedOff>
                <systemProcessesFilterOff>false</systemProcessesFilterOff>
              </cleaner>
            </org.jenkinsci.plugins.proccleaner.PreBuildCleanup>
            {% else %}
            {# this satisfies xml.etree.ElementTree.fromstring() #}
            <empty></empty>
            {% endif %}

    scm:
      - git: &lttng-tools_scm_git_default
          url: https://github.com/{github_user}/lttng-tools.git
          browser: githubweb
          browser-url: https://github.com/{github_user}/lttng-tools
          branches:
            - '{version}'
          basedir: src/lttng-tools
          skip-tag: true

    triggers:
      - pollscm: &lttng-tools_trigger_pollscm_default
          cron: "@hourly"

    properties:
      - inject: &lttng-tools_property_inject_defaults
          properties-content: !j2: |
            PROJECT_NAME=lttng-tools
            {% for item in job_properties %}
            {{item.name}}={{item.value}}
            {% endfor %}
      - build-discarder: &lttng-tools_property_build-discarder_defaults
          num-to-keep: 20
          artifact-num-to-keep: 2
      - github: &lttng-tools_property_github_defaults
          url: https://github.com/{github_user}/lttng-tools

    # Variables
    babeltrace_buildtype: '{buildtype}'
    babeltrace_platform: '${{platform}}'
    bt_job_prefix: ''
    builds: !!python/tuple [std]
    buildtype: 'linuxbuild'
    confs: !!python/tuple [std]
    email_to: ''
    filter: ''
    github_user: lttng
    java_agents: 'true'  # when building with the agents config, include java agents
    java_preferred_jdk: 'default'
    job_prefix: ''
    job_properties: []
    modules_aligned_access: !!python/tuple ['default']
    python: ''
    timeout: '30'
    touchstone: ''
    urcu_buildtype: '{buildtype}'
    urcu_job_prefix: ''
    urcu_platform: '${{platform}}'
    ust_buildtype: '{buildtype}'
    ust_job_prefix: ''
    ust_platform: '${{platform}}'
    ustversion: '{version}'
    wrapper_proc_cleaner: true

- defaults:
    <<: *lttng-tools-defaults
    name: lttng-tools-review
    concurrent: true
    parameters:
      - string:
          name: 'GERRIT_BRANCH'
          default: 'master'
      - string:
          name: 'GERRIT_REFSPEC'
          default: ''
          description: 'The refspec to fetch. E.g. `refs/changes/15/14715/2`. You may find it in the gerrit interface for downloading a specific revision of patch'
      - string:
          name: 'GERRIT_NAME'
          default: 'review.lttng.org'
      - string:
          name: 'GERRIT_HOST'
          default: 'review.lttng.org'
      - string:
          name: 'GERRIT_PATCHSET_REVISION'
          default: ''
      - string:
          name: 'GERRIT_PROJECT'
          default: 'lttng-tools'
    scm:
      - git: &lttng-tools_scm_git_review
          url: https://review.lttng.org/lttng-tools
          refspec: 'refs/changes/*:refs/changes/*'
          branches:
            - '$GERRIT_REFSPEC'
          basedir: src/lttng-tools
          skip-tag: true
    triggers: !j2-yaml: |
      {% if enable_gerrit_trigger %}
      - gerrit:
          {% if gerrit_approval_values %}
          trigger-on:
            {% for value in gerrit_approval_values %}
            - comment-added-event:
                approval-category: 'CI-Build'
                approval-value: '{{ value }}'
            {% endfor %}
          {% endif %}
          projects:
            - project-compare-type: 'PLAIN'
              project-pattern: 'lttng-tools'
              branches:
                - branch-compare-type: 'PLAIN'
                  branch-pattern: '{version}'
      {% else %}[]{% endif %}

    # Job variables
    enable_gerrit_trigger: true
    _gerrit_approval_complete: !!python/tuple [3]
    _gerrit_approval_fast_and_more: !!python/tuple [2, 3]
    _gerrit_approval_build_only_and_more: !!python/tuple [1, 2, 3]
    gerrit_approval_values: '{_gerrit_approval_complete}'

## Anchors
- _lttng-tools_steps_copyartifact_defaults:
    name: 'lttng-tools_steps_copyartifact_defaults'
    steps:
      - copyartifact: &lttng-tools_steps_copyartifact_defaults
          project: ''
          which-build: last-successful
          stable: false
          filter: 'build/**'
          target: 'deps'
          do-not-fingerprint: true


## Axis Anchors
- _lttng-tools_matrix_axes_defaults: &lttng-tools_matrix_axes_defaults
    name: 'lttng-tools_matrix_axes_defaults'
    project-type: matrix
    node: 'master' # Applies only to matrix flyweight task
    execution-strategy: &lttng-tools_matrix_execution-strategy_defaults
      combination-filter: '{filter}'
      touchstone:
        expr: '{touchstone}'
        result: unstable
    axes:
      - axis: &lttng-tools_matrix_axis_platform
         type: slave
         name: platform
         values: '{obj:platforms}'
      - axis: &lttng-tools_matrix_axis_conf
         type: user-defined
         name: conf
         values: '{obj:confs}'
      - axis: &lttng-tools_matrix_axis_build
         type: user-defined
         name: build
         values: '{obj:builds}'
      - axis: &lttng-tools_matrix_axis_liburcu_version
         type: user-defined
         name: liburcu_version
         values: '{obj:urcuversions}'
      - axis: &lttng-tools_matrix_axis_babeltrace_version
         type: user-defined
         name: babeltrace_version
         values: '{obj:babelversions}'

- _lttng-tools_matrix_axes_rootbuild: &lttng-tools_matrix_axes_rootbuild
    name: 'lttng-tools_matrix_axes_rootbuild'
    project-type: matrix
    node: 'master' # Applies only to matrix flyweight task
    execution-strategy: *lttng-tools_matrix_execution-strategy_defaults
    axes:
      - axis: &lttng-tools_matrix_axis_root_node
         type: slave
         name: node
         values: '{obj:nodes}'
      - axis: &lttng-tools_matrix_axis_root_platform
          <<: *lttng-tools_matrix_axis_platform
          type: user-defined
      - axis: &lttng-tools_matrix_axis_modules_aligned_access
          type: user-defined
          name: 'modules_aligned_access'
          values: '{obj:modules_aligned_access}'
      - axis: *lttng-tools_matrix_axis_conf
      - axis: *lttng-tools_matrix_axis_build
      - axis: *lttng-tools_matrix_axis_liburcu_version
      - axis: *lttng-tools_matrix_axis_babeltrace_version

## Builders Anchors
- _lttng-tools_builders_defaults: &lttng-tools_builders_defaults
    name: 'lttng-tools_builders_defaults'
    builders:
      # Generate a properties file to add additionnal env
      - shell: |
          #!/bin/bash
          set -exu
          # Select the deps conf based on the current conf
          case "$conf" in
            std|static)
              liburcu_conf=$conf
              babeltrace_conf=$conf
              ust_conf=$conf
              ;;
            agents)
              liburcu_conf=std
              babeltrace_conf=std
              ust_conf=$conf
              ;;
            debug-rcu|tls_fallback)
              liburcu_conf=$conf
              babeltrace_conf=std
              ust_conf=$conf
              ;;
            *)
              liburcu_conf=std
              babeltrace_conf=std
              ust_conf=std
              ;;
          esac

          # Run java tests only on 'linuxbuild' and 'slesbuild' jobs
          if [ "{buildtype}" = "linuxbuild" ] || [ "{buildtype}" = "slesbuild" ]; then
            echo "LTTNG_TOOLS_RUN_UST_JAVA_TESTS=yes" >> env.properties
          else
            echo "LTTNG_TOOLS_RUN_UST_JAVA_TESTS=no" >> env.properties
          fi

          if [ "{buildtype}" = "slesbuild" ] ; then
            echo "TAP_AUTOTIME=0" >> env.properties
            echo "LTTNG_TESTS_TAP_AUTOTIME=0" >> env.properties
            # On SLES, force log4j to 2.17.1
            echo "LTTNG_TOOLS_UST_JAVA_TESTS_LOG4J_API_VERSION=2.17.1" >> env.properties
          fi

          echo "liburcu_conf=$liburcu_conf" >> env.properties
          echo "babeltrace_conf=$babeltrace_conf" >> env.properties
          echo "babeltrace_buildtype={babeltrace_buildtype}" >> env.properties

          echo "ust_conf=$ust_conf" >> env.properties
          echo "LTTNG_TOOLS_JAVA_AGENTS={java_agents|true}" >> env.properties
          echo "java_preferred_jdk={java_preferred_jdk}" >> env.properties
          if [ "{python}" != "" ]; then
            echo "PYTHON={python}" >> env.properties
          fi

          # Make the serial test runner aware of the current job timeout limit
          echo "LTTNG_TEST_SERIAL_TEST_TIMEOUT_MINUTES={timeout}" >> env.properties

      # Inject the additionnal env early to use them in the copyartifact step
      - inject:
          properties-file: env.properties

      # Always copy liburcu artifacts
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project:
            !j2: |
              {{urcu_job_prefix}}liburcu_{%- raw -%}${liburcu_version}{%- endraw -%}
              _{{cctype|default(urcu_buildtype)}}/platform={{urcu_platform}},conf={%- raw -%}${liburcu_conf}{%- endraw -%},build=std,{%- if ccs|default(false) -%}cc={%- raw -%}${cc}{%- endraw -%},{%- endif -%}

      # Always copy babeltrace artifacts
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: '{bt_job_prefix}babeltrace_${{babeltrace_version}}_${{babeltrace_buildtype}}/platform={babeltrace_platform},conf=${{babeltrace_conf}},build=std'

      # Some conf do not require lttng-ust artifacts
      - conditional-step:
          condition-kind: not
          condition-operand:
            condition-kind: regex-match
            label: '$conf'
            regex: '(no-ust|relayd-only)'
          steps:
            - copyartifact:
                <<: *lttng-tools_steps_copyartifact_defaults
                project:
                  !j2: |
                    {{ust_job_prefix}}lttng-ust_{{ustversion}}_{{cctype|default(ust_buildtype)}}/liburcu_version={%- raw -%}${liburcu_version}{%- endraw -%}
                    ,platform={{ust_platform}},conf={%- raw -%}${ust_conf}{%- endraw -%}
                    ,build=std,{% if ccs|default(false) %}cc={%- raw -%}${cc}{%- endraw -%}{% endif %}

      # rootbuild requires a checkout of modules
      - conditional-step:
          condition-kind: regex-match
          label: '$JOB_NAME'
          regex: '.*_root(?:_[a-z]+)?build.*'
          steps:
            - shell: |
                #!/bin/bash
                set -exu
                git clone -b "{version}" https://github.com/{github_user}/lttng-modules.git src/lttng-modules

      - shell:
         !include-raw-verbatim: scripts/lttng-tools/prebuild_clean_processes_coredumps.sh

      - shell:
         !include-raw-verbatim:
           - scripts/common/print.sh
           - scripts/lttng-tools/build.sh

- _lttng-tools_builders_review: &lttng-tools_builders_review
    name: 'lttng-tools_builders_review'
    builders:
      - shell: |
          #!/bin/bash
          set -exu
          # Run java tests only on 'linuxbuild' and 'slesbuild' jobs
          if [ "{buildtype}" = "linuxbuild" ] || [ "{buildtype}" = "slesbuild" ]; then
            echo "LTTNG_TOOLS_RUN_UST_JAVA_TESTS=yes" >> env.properties
          else
            echo "LTTNG_TOOLS_RUN_UST_JAVA_TESTS=no" >> env.properties
          fi
          if [ "{buildtype}" = "slesbuild" ] ; then
            echo "TAP_AUTOTIME=0" >> env.properties
            echo "LTTNG_TESTS_TAP_AUTOTIME=0" >> env.properties
          fi
          echo "LTTNG_TOOLS_JAVA_AGENTS={java_agents|true}" >> env.properties
          # If not using java_agents, disable that for any lttng-ust which may be
          # built via depends-on
          echo "LTTNG_UST_JAVA_AGENTS={java_agents|false}" >> env.properties
          echo "java_preferred_jdk={java_preferred_jdk}" >> env.properties
          if [ "{python}" != "" ]; then
            echo "PYTHON={python}" >> env.properties
          fi
          # Make the serial test runner aware of the current job timeout limit
          echo "LTTNG_TEST_SERIAL_TEST_TIMEOUT_MINUTES={timeout}" >> env.properties

          # If started with CI-Build, disable tests when the value == 1
          ci_build_value="$(echo "$GERRIT_EVENT_UPDATED_APPROVALS" | jq -r '.["CI-Build"].value')"
          if [[ "$ci_build_value" == "1" ]]; then
            echo "Disabling tests"
            echo "LTTNG_TOOLS_RUN_TESTS=no" >> env.properties
          fi

      - inject:
          properties-file: env.properties
      - shell:
         !include-raw-verbatim: scripts/lttng-tools/gerrit-depends-on.sh

      - inject:
          properties-file: gerrit_custom_dependencies.properties

      # rootbuild requires a checkout of modules, but only
      # when we don't depend on a specific lttng-modules change
      - conditional-step:
          condition-kind: and
          on-evaluation-failure: run
          condition-operands:
            - condition-kind: shell
              condition-command: 'test "$GERRIT_DEP_LTTNG_MODULES" = ""'
            - condition-kind: regex-match
              label: '$JOB_NAME'
              regex: '.*_root(?:_[a-z]+)?build.*'
          steps:
            - shell: |
                #!/bin/bash
                set -exu
                if [[ "$GERRIT_PROJECT" =~ "lttng-tools" ]]; then
                  git clone -b "$GERRIT_BRANCH" https://github.com/{github_user}/lttng-modules.git src/lttng-modules
                elif [[ "$GERRIT_PROJECT" =~ "lttng-modules" ]]; then
                  # This gets used when building lttng-tools for review with lttng-modules changesets.
                  git clone "https://${{GERRIT_HOST}}/${{GERRIT_PROJECT}}" src/lttng-modules
                  pushd src/lttng-modules
                  git fetch "https://${{GERRIT_HOST}}/${{GERRIT_PROJECT}}" "${{GERRIT_PATCHSET_REVISION}}"
                  git checkout FETCH_HEAD
                  popd
                fi

      # Copy lttng-ust artifacts if the conf is 'std' or 'agents'
      # and we don't depend on a specific lttng-ust change
      - conditional-step:
          condition-kind: and
          on-evaluation-failure: run
          condition-operands:
              - condition-kind: shell
                condition-command: 'test "$GERRIT_DEP_LTTNG_UST" = ""'
              - condition-kind: not
                condition-operand:
                  condition-kind: regex-match
                  label: '$conf'
                  regex: '(no-ust|relayd-only)'
              - condition-kind: regex-match
                label: '$GERRIT_PROJECT'
                regex: '(lttng-tools)'
          steps:
            - copyartifact:
                <<: *lttng-tools_steps_copyartifact_defaults
                project: '{ust_job_prefix}lttng-ust_${{GERRIT_BRANCH}}_{ust_buildtype}/liburcu_version=${{liburcu_version}},platform={ust_platform},conf=${{conf}},build=std'

      # Copy lttng-ust artifacts if the conf is 'std' or 'agents, there
      # is not a dependency on a specific change, and the gerrit project isn't
      # lttng-tools.
      - conditional-step:
          condition-kind: and
          on-evaluation-failure: run
          condition-operands:
              - condition-kind: shell
                condition-command: 'test "$GERRIT_DEP_LTTNG_UST" = ""'
              - condition-kind: not
                condition-operand:
                  condition-kind: regex-match
                  label: '$conf'
                  regex: '(no-ust|relayd-only)'
              - condition-kind: shell
                label: '$GERRIT_PROJECT'
                regex: 'if [[ $GERRIT_PROJECT =~ "lttng-tools" ]] ; then exit 1 ; fi'
          steps:
            - copyartifact:
                <<: *lttng-tools_steps_copyartifact_defaults
                project: '{ust_job_prefix}lttng-ust_{ustversion|master}_{ust_buildtype}/liburcu_version=${{liburcu_version}},platform={ust_platform},conf=${{conf}},build=std'

      # Copy liburcu artifacts if we don't depend on a specific liburcu change
      - conditional-step:
          condition-kind: and
          condition-operands:
            - condition-kind: shell
              condition-command: 'test "$GERRIT_DEP_USERSPACE_RCU" = ""'
            # When debug-rcu or tls_fallback, we need a different urcu build
            - condition-kind: not
              condition-operand:
                condition-kind: regex-match
                label: '$conf'
                regex: '(debug-rcu|tls_fallback)'
          steps:
            - copyartifact:
                <<: *lttng-tools_steps_copyartifact_defaults
                project: '{urcu_job_prefix}liburcu_${{liburcu_version}}_{urcu_buildtype}/platform={urcu_platform},conf=std,build=std'

      - conditional-step:
          condition-kind: and
          condition-operands:
            - condition-kind: shell
              condition-command: 'test "$GERRIT_DEP_USERSPACE_RCU" = ""'
            # When debug-rcu or tls_fallback, we need a different urcu build
            - condition-kind: regex-match
              label: '$conf'
              regex: '(debug-rcu|tls_fallback)'
          steps:
            - copyartifact:
                <<: *lttng-tools_steps_copyartifact_defaults
                project: '{urcu_job_prefix}liburcu_${{liburcu_version}}_{urcu_buildtype}/platform={urcu_platform},conf=${{conf}},build=std'

      # Copy babeltrace artifacts if we don't depend on a specific babeltrace change
      - conditional-step:
          condition-kind: shell
          on-evaluation-failure: run
          condition-command: 'test "$GERRIT_DEP_BABELTRACE" = ""'
          steps:
            - copyartifact:
                <<: *lttng-tools_steps_copyartifact_defaults
                project: '{bt_job_prefix}babeltrace_${{babeltrace_version}}_{babeltrace_buildtype}/platform={babeltrace_platform},conf=std,build=std'

      - shell:
         !include-raw-verbatim: scripts/lttng-tools/prebuild_clean_processes_coredumps.sh

      # Build liburcu if we depend on a specific liburcu change
      - conditional-step:
          condition-kind: shell
          condition-command: 'test "$GERRIT_DEP_USERSPACE_RCU" != ""'
          steps:
            - shell:
               !include-raw-verbatim:
                   - scripts/common/override-build-std.sh
                   - scripts/common/print.sh
                   - scripts/liburcu/build.sh
                   - scripts/common/clean-build-dir.sh
            - shell:
               !include-raw-verbatim: scripts/lttng-tools/gerrit-install-deps.sh

      # Build babeltrace if we depend on a specific babeltrace change
      - conditional-step:
          condition-kind: shell
          condition-command: 'test "$GERRIT_DEP_BABELTRACE" != ""'
          steps:
            - shell:
               !include-raw-verbatim:
                   - scripts/common/override-build-std.sh
                   - scripts/common/print.sh
                   - scripts/babeltrace/build.sh
                   - scripts/common/clean-build-dir.sh
            - shell:
               !include-raw-verbatim: scripts/lttng-tools/gerrit-install-deps.sh

      # Build lttng-ust if we depend on a specific lttng-ust change
      - conditional-step:
          condition-kind: and
          condition-operands:
            - condition-kind: shell
              condition-command: 'test "$GERRIT_DEP_LTTNG_UST" != ""'
            - condition-kind: not
              condition-operand:
                condition-kind: regex-match
                label: '$conf'
                regex: '(no-ust|relayd-only)'
          steps:
            - shell:
               !include-raw-verbatim:
                   - scripts/common/override-build-std.sh
                   - scripts/common/print.sh
                   - scripts/lttng-ust/build.sh
                   - scripts/common/clean-build-dir.sh
            - shell:
               !include-raw-verbatim: scripts/lttng-tools/gerrit-install-deps.sh

      # Finaly build lttng-tools
      - shell:
         !include-raw-verbatim:
           - scripts/common/print.sh
           - scripts/lttng-tools/build.sh

- _lttng-tools_builders_win: &lttng-tools_builders_win
    name: 'lttng-tools_builders_win'
    builders:
      # Always copy liburcu artifacts
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: '{urcu_job_prefix}liburcu_${{liburcu_version}}_winbuild/platform={ust_platform},conf=std,build=std'

      - inject:
          properties-content: |
            java_preferred_jdk={java_preferred_jdk}

      - conditional-step:
          condition-kind: strings-match
          on-evaluation-failure: run
          condition-string1: '${{platform}}'
          condition-string2: 'cygwin64'
          steps:
            - shell:
               !include-raw-verbatim:
                 - scripts/common/cygwin64-shebang
                 - scripts/common/cygpath-prefix
                 - scripts/common/print.sh
                 - scripts/lttng-tools/build.sh

      - conditional-step:
          condition-kind: strings-match
          on-evaluation-failure: run
          condition-string1: '${{platform}}'
          condition-string2: 'msys2-ucrt64'
          steps:
            - inject:
               properties-content: 'MSYSTEM=UCRT64'
            - shell:
               !include-raw-verbatim:
                 - scripts/common/msys2-shebang
                 - scripts/common/cygpath-prefix
                 - scripts/common/print.sh
                 - scripts/lttng-tools/build.sh

- _lttng-tools_publishers_defaults: &lttng-tools_publishers_defaults
    name: 'lttng-tools_publishers_defaults'
    publishers:
      # On build abort (timeout), wait 10 seconds before running the other post
      # build scripts, this will allow the processes to terminate and make the
      # build log more legible.
      - postbuildscript: &lttng-tools_publisher_postbuildscript_wait_10_seconds_on_abort
          mark-unstable-if-failed: false
          builders:
            - role: SLAVE
              build-on:
                  - ABORTED
              build-steps:
                  - shell:
                      !include-raw-verbatim: scripts/lttng-tools/postbuild_wait_10_seconds.sh

      # On build failure, try to get partial tap results if any exists
      - postbuildscript: &lttng-tools_publisher_postbuildscript_collect_tap_on_failure
          mark-unstable-if-failed: false
          builders:
            - role: SLAVE
              build-on:
                  - ABORTED
                  - FAILURE
              build-steps:
                  - shell:
                      !include-raw-verbatim: scripts/lttng-tools/postbuild_collect_tap_results.sh

      # If there are leftover lttng processes or core files present, kill the
      # processes, collect the core files, delete them and mark the build
      # unstable.
      - postbuildscript: &lttng-tools_publisher_postbuildscript_clean_processes_coredumps
          mark-unstable-if-failed: true
          builders:
            - role: SLAVE
              build-on:
                  - SUCCESS
                  - UNSTABLE
                  - NOT_BUILT
                  - ABORTED
                  - FAILURE
              build-steps:
                  - shell:
                      !include-raw-verbatim: scripts/lttng-tools/postbuild_clean_processes_coredumps.sh

      - tap: &lttng-tools_publisher_tap_defaults
          results: 'tap/**/*.log'
          fail-if-no-results: true
          failed-tests-mark-build-as-failure: true
          include-comment-diagnostics: true
          output-tap-to-console: false
          todo-is-failure: false
          remove-yaml-if-corrupted: true

      - raw: &lttng-tools_publisher_warnings-ng_defaults
          xml: |
            <io.jenkins.plugins.analysis.core.steps.IssuesRecorder plugin="warnings-ng">
              <analysisTools>
                <io.jenkins.plugins.analysis.warnings.Gcc4>
                  <id/>
                  <name/>
                  <jenkins plugin="plugin-util-api"/>
                  <pattern/>
                  <reportEncoding/>
                  <skipSymbolicLinks>false</skipSymbolicLinks>
                </io.jenkins.plugins.analysis.warnings.Gcc4>
              </analysisTools>
              <sourceCodeEncoding/>
              <sourceDirectory/>
              <sourceDirectories/>
              <ignoreQualityGate>false</ignoreQualityGate>
              <ignoreFailedBuilds>true</ignoreFailedBuilds>
              <failOnError>false</failOnError>
              <healthy>0</healthy>
              <unhealthy>0</unhealthy>
              <minimumSeverity plugin="analysis-model-api">
                <name>LOW</name>
              </minimumSeverity>
              <filters/>
              <isEnabledForFailure>true</isEnabledForFailure>
              <isAggregatingResults>true</isAggregatingResults>
              <isBlameDisabled>false</isBlameDisabled>
              <skipPublishingChecks>true</skipPublishingChecks>
              <publishAllIssues>false</publishAllIssues>
              <qualityGates>
                <io.jenkins.plugins.analysis.core.util.QualityGate>
                  <threshold>1</threshold>
                  <type>TOTAL</type>
                  <status>WARNING</status>
                </io.jenkins.plugins.analysis.core.util.QualityGate>
              </qualityGates>
              <trendChartType>AGGREGATION_TOOLS</trendChartType>
              <scm/>
            </io.jenkins.plugins.analysis.core.steps.IssuesRecorder>

      - junit: &lttng-tools_publisher_junit_defaults
          results: 'src/lttng-ust-java-tests/**/target/failsafe-reports/*.xml'
          allow-empty-results: true

      - archive: &lttng-tools_publisher_archive_defaults
          artifacts: 'build/**,deps/**,tap/**,log/**,core.tar.xz'
          follow-symlinks: true
          allow-empty: false

      - workspace-cleanup: &lttng-tools_publisher_workspace-cleanup_defaults
          clean-if:
            - failure: false

      - raw: &lttng-tools_publisher_proc-cleaner_defaults
          xml: |
            <org.jenkinsci.plugins.proccleaner.PostBuildCleanup plugin="proc-cleaner-plugin">
              <cleaner class="org.jenkinsci.plugins.proccleaner.PsCleaner">
                <killerType>org.jenkinsci.plugins.proccleaner.PsAllKiller</killerType>
                <killer class="org.jenkinsci.plugins.proccleaner.PsAllKiller"/>
                <switchedOff>false</switchedOff>
                <systemProcessesFilterOff>false</systemProcessesFilterOff>
              </cleaner>
            </org.jenkinsci.plugins.proccleaner.PostBuildCleanup>

      - ircbot: &lttng-tools_publisher_ircbot_defaults
          strategy: statechange-only
          message-type: summary
          matrix-notifier: only-parent

      - email-ext: &lttng-tools_publisher_email-ext_defaults
          recipients: '{obj:email_to}'
          reply-to: ci-notification@lists.lttng.org
          always: false
          unstable: false
          first-failure: true
          first-unstable: true
          not-built: false
          aborted: false
          regression: false
          failure: false
          second-failure: false
          improvement: false
          still-failing: false
          success: false
          fixed: false
          fixed-unhealthy: true
          still-unstable: false
          pre-build: false
          matrix-trigger: only-parent
          send-to:
            - recipients

- _lttng-tools_publishers_rootbuild: &lttng-tools_publishers_rootbuild
    name: 'lttng-tools_publishers_rootbuild'
    publishers:
      - postbuildscript: *lttng-tools_publisher_postbuildscript_wait_10_seconds_on_abort
      - postbuildscript: *lttng-tools_publisher_postbuildscript_collect_tap_on_failure
      - postbuildscript: *lttng-tools_publisher_postbuildscript_clean_processes_coredumps
      - tap: *lttng-tools_publisher_tap_defaults
      - raw: *lttng-tools_publisher_warnings-ng_defaults
      - archive: *lttng-tools_publisher_archive_defaults
      - workspace-cleanup: *lttng-tools_publisher_workspace-cleanup_defaults
      - ircbot: *lttng-tools_publisher_ircbot_defaults
      - email-ext: *lttng-tools_publisher_email-ext_defaults

- _lttng-tools_publishers_win: &lttng-tools_publishers_win
    name: 'lttng-tools_publishers_win'
    publishers:
      - tap: *lttng-tools_publisher_tap_defaults
      - raw: *lttng-tools_publisher_warnings-ng_defaults
      - archive: *lttng-tools_publisher_archive_defaults
      - workspace-cleanup: *lttng-tools_publisher_workspace-cleanup_defaults
      - raw: *lttng-tools_publisher_proc-cleaner_defaults
      - ircbot: *lttng-tools_publisher_ircbot_defaults
      - email-ext: *lttng-tools_publisher_email-ext_defaults

## Templates
- job-template:
    name: '{job_prefix}lttng-tools_{version}_{buildtype}'
    defaults: lttng-tools

    <<: *lttng-tools_matrix_axes_defaults
    <<: *lttng-tools_builders_defaults
    <<: *lttng-tools_publishers_defaults

    triggers:
      - pollscm: *lttng-tools_trigger_pollscm_default
      - reverse:
            jobs: '{ust_job_prefix}lttng-ust_{version}_{buildtype}'
            result: 'success'

- job-template:
    name: '{job_prefix}lttng-tools_{version}_{cctype}'
    defaults: lttng-tools

    <<: *lttng-tools_matrix_axes_defaults
    axes:
      - axis:
          <<: *lttng-tools_matrix_axis_platform
      - axis:
          <<: *lttng-tools_matrix_axis_conf
      - axis:
          <<: *lttng-tools_matrix_axis_build
      - axis:
          <<: *lttng-tools_matrix_axis_liburcu_version
      - axis:
          <<: *lttng-tools_matrix_axis_babeltrace_version
      - axis:
          type: user-defined
          name: cc
          values: '{obj:ccs}'

    <<: *lttng-tools_builders_defaults
    <<: *lttng-tools_publishers_defaults

    triggers:
      - pollscm: *lttng-tools_trigger_pollscm_default
      - reverse:
            jobs: '{ust_job_prefix}lttng-ust_{version}_{cctype}'
            result: 'success'

- job-template:
    name: 'dev_{user}_lttng-tools_{version}_{buildtype}'
    defaults: lttng-tools

    <<: *lttng-tools_matrix_axes_defaults
    <<: *lttng-tools_builders_defaults
    <<: *lttng-tools_publishers_defaults

- job-template:
    name: '{job_prefix}lttng-tools_{version}_root_{buildtype}'
    defaults: lttng-tools

    scm:
      - git: *lttng-tools_scm_git_default

    wrappers:
      - ansicolor: *lttng-tools_wrapper_ansicolor_defaults
      - timeout: *lttng-tools_wrapper_timeout_defaults
      - timestamps

    <<: *lttng-tools_matrix_axes_rootbuild
    <<: *lttng-tools_builders_defaults
    <<: *lttng-tools_publishers_rootbuild

    triggers:
      - pollscm: *lttng-tools_trigger_pollscm_default
      - reverse:
            jobs: '{ust_job_prefix}lttng-ust_{version}_{buildtype}'
            result: 'success'

- job-template:
    name: '{job_prefix}lttng-tools_{version}_root_{cctype}'
    defaults: lttng-tools

    scm:
      - git: *lttng-tools_scm_git_default

    wrappers:
      - ansicolor: *lttng-tools_wrapper_ansicolor_defaults
      - timeout: *lttng-tools_wrapper_timeout_defaults
      - timestamps

    <<: *lttng-tools_matrix_axes_rootbuild
    axes:
      - axis:
          <<: *lttng-tools_matrix_axis_root_node
      - axis:
          <<: *lttng-tools_matrix_axis_root_platform
      - axis:
          <<: *lttng-tools_matrix_axis_conf
      - axis:
          <<: *lttng-tools_matrix_axis_build
      - axis:
          <<: *lttng-tools_matrix_axis_liburcu_version
      - axis:
          <<: *lttng-tools_matrix_axis_babeltrace_version
      - axis:
          type: user-defined
          name: cc
          values: '{obj:ccs}'
    <<: *lttng-tools_builders_defaults
    <<: *lttng-tools_publishers_rootbuild

    triggers:
      - pollscm: *lttng-tools_trigger_pollscm_default
      - reverse:
            jobs: '{ust_job_prefix}lttng-ust_{version}_{cctype}'
            result: 'success'

- job-template:
    name: lttng-tools_{version}_winbuild
    defaults: lttng-tools

    <<: *lttng-tools_matrix_axes_defaults
    <<: *lttng-tools_builders_win
    <<: *lttng-tools_publishers_win

- job-template:
    name: 'dev_review_lttng-tools_{version}_winbuild'
    defaults: lttng-tools-review

    <<: *lttng-tools_matrix_axes_defaults
    <<: *lttng-tools_builders_win
    <<: *lttng-tools_publishers_win

- job-template:
    name: dev_review_lttng-tools_{version}_{buildtype}
    defaults: lttng-tools-review

    properties: &lttng-tools_properties_review_defaults
      - inject: *lttng-tools_property_inject_defaults
      - build-discarder:
          days-to-keep: 1
      - throttle:
          option: 'category'
          categories:
            - 'gerrit-{buildtype}'

    <<: *lttng-tools_matrix_axes_defaults
    <<: *lttng-tools_builders_review

    publishers: &lttng-tools_publishers_review_defaults
      # On build abort (timeout), wait 10 seconds before running the other post
      # build scripts, this will allow the processes to terminate and make the
      # build log more legible.
      - postbuildscript: *lttng-tools_publisher_postbuildscript_wait_10_seconds_on_abort

      # On build failure, try to get partial tap results if any exists
      - postbuildscript: *lttng-tools_publisher_postbuildscript_collect_tap_on_failure

      # If there are leftover lttng processes or core files present, kill the
      # processes, collect the core files, delete them and mark the build
      # unstable.
      - postbuildscript: *lttng-tools_publisher_postbuildscript_clean_processes_coredumps

      - tap: *lttng-tools_publisher_tap_defaults
      - raw: *lttng-tools_publisher_warnings-ng_defaults
      - junit: *lttng-tools_publisher_junit_defaults
      - archive: *lttng-tools_publisher_archive_defaults
      - workspace-cleanup: *lttng-tools_publisher_workspace-cleanup_defaults
      - raw: *lttng-tools_publisher_proc-cleaner_defaults

- job-template:
    name: 'dev_review_lttng-tools_{version}_{cctype}'
    defaults: lttng-tools-review
    <<: *lttng-tools_matrix_axes_defaults
    axes:
      - axis:
          <<: *lttng-tools_matrix_axis_platform
      - axis:
          <<: *lttng-tools_matrix_axis_conf
      - axis:
          <<: *lttng-tools_matrix_axis_build
      - axis:
          <<: *lttng-tools_matrix_axis_liburcu_version
      - axis:
          <<: *lttng-tools_matrix_axis_babeltrace_version
      - axis:
          type: user-defined
          name: cc
          values: '{obj:ccs}'

    <<: *lttng-tools_builders_review
    <<: *lttng-tools_publishers_defaults
    properties: *lttng-tools_properties_review_defaults
    publishers: *lttng-tools_publishers_review_defaults

- job-template:
    name: dev_review_lttng-tools_{version}_clang-tidy
    defaults: lttng-tools-review

    properties:
      - inject:
          properties-content: |
            PROJECT_NAME=lttng-tools
            LTTNG_TOOLS_MAKE_INSTALL=no
            LTTNG_TOOLS_MAKE_CLEAN=no
            LTTNG_TOOLS_RUN_TESTS=no
            LTTNG_TOOLS_GEN_COMPILE_COMMANDS=yes
            LTTNG_TOOLS_CLANG_TIDY=yes
      - build-discarder:
          days-to-keep: 1

    <<: *lttng-tools_matrix_axes_defaults
    <<: *lttng-tools_builders_review

    publishers:
      - raw:
          xml: |
            <io.jenkins.plugins.analysis.core.steps.IssuesRecorder plugin="warnings-ng">
              <analysisTools>
                <io.jenkins.plugins.analysis.warnings.ClangTidy>
                  <id/>
                  <name/>
                  <jenkins plugin="plugin-util-api"/>
                  <pattern/>
                  <reportEncoding/>
                  <skipSymbolicLinks>false</skipSymbolicLinks>
                </io.jenkins.plugins.analysis.warnings.ClangTidy>
              </analysisTools>
              <sourceCodeEncoding/>
              <sourceDirectory/>
              <sourceDirectories/>
              <ignoreQualityGate>false</ignoreQualityGate>
              <ignoreFailedBuilds>true</ignoreFailedBuilds>
              <failOnError>false</failOnError>
              <healthy>0</healthy>
              <unhealthy>0</unhealthy>
              <minimumSeverity plugin="analysis-model-api">
                <name>LOW</name>
              </minimumSeverity>
              <filters/>
              <isEnabledForFailure>true</isEnabledForFailure>
              <isAggregatingResults>true</isAggregatingResults>
              <isBlameDisabled>false</isBlameDisabled>
              <skipPublishingChecks>true</skipPublishingChecks>
              <publishAllIssues>false</publishAllIssues>
              <qualityGates>
                <io.jenkins.plugins.analysis.core.util.QualityGate>
                  <status>FAILED</status>
                  <threshold>1</threshold>
                  <type>TOTAL</type>
                </io.jenkins.plugins.analysis.core.util.QualityGate>
              </qualityGates>
              <trendChartType>AGGREGATION_TOOLS</trendChartType>
              <scm/>
            </io.jenkins.plugins.analysis.core.steps.IssuesRecorder>
      - archive:
          artifacts: 'clang-tidy-fixes.diff'
          allow-empty: true
      - workspace-cleanup: *lttng-tools_publisher_workspace-cleanup_defaults
      - raw: *lttng-tools_publisher_proc-cleaner_defaults

- job-template:
    name: 'dev_review_lttng-tools_{version}_root_{buildtype}'
    defaults: lttng-tools-review

    properties:
      - inject: *lttng-tools_property_inject_defaults
      - build-discarder:
          days-to-keep: 1
      - throttle:
          option: 'category'
          categories:
            - 'gerrit-{buildtype}'

    wrappers:
      - ansicolor: *lttng-tools_wrapper_ansicolor_defaults
      - timeout: *lttng-tools_wrapper_timeout_defaults
      - timestamps

    <<: *lttng-tools_matrix_axes_rootbuild
    <<: *lttng-tools_builders_review

    publishers:
      - tap: *lttng-tools_publisher_tap_defaults
      - raw: *lttng-tools_publisher_warnings-ng_defaults
      - archive: *lttng-tools_publisher_archive_defaults
      - workspace-cleanup: *lttng-tools_publisher_workspace-cleanup_defaults

- job-template:
    name: 'dev_review_lttng-modules_with_lttng-tools_{version}_root_{buildtype}'
    defaults: lttng-tools-review

    # Check out lttng-tools from github, not lttng-tools from gerrit
    scm:
      - git:
          <<: *lttng-tools_scm_git_default

    triggers:
      - gerrit:
          trigger-on:
            - comment-added-event:
                approval-category: 'CI-Build'
                approval-value: 1
          projects:
            - project-compare-type: 'PLAIN'
              project-pattern: 'lttng-modules'
              branches:
                - branch-compare-type: 'REG_EXP'
                  branch-pattern: '{modules_branch_pattern}'


    properties:
      - inject: *lttng-tools_property_inject_defaults
      - build-discarder:
          days-to-keep: 1
      - throttle:
          option: 'category'
          categories:
            - 'gerrit-{buildtype}'

    wrappers:
      - ansicolor: *lttng-tools_wrapper_ansicolor_defaults
      - timeout: *lttng-tools_wrapper_timeout_defaults
      - timestamps

    <<: *lttng-tools_matrix_axes_rootbuild
    <<: *lttng-tools_builders_review

    publishers:
      - tap: *lttng-tools_publisher_tap_defaults
      - raw: *lttng-tools_publisher_warnings-ng_defaults
      - archive: *lttng-tools_publisher_archive_defaults
      - workspace-cleanup: *lttng-tools_publisher_workspace-cleanup_defaults

- job-template:
    name: 'dev_review_lttng-tools_{version}_root_{cctype}'
    defaults: lttng-tools-review
    <<: *lttng-tools_matrix_axes_rootbuild
    axes:
      - axis:
          <<: *lttng-tools_matrix_axis_root_node
      - axis:
          <<: *lttng-tools_matrix_axis_root_platform
      - axis:
          <<: *lttng-tools_matrix_axis_conf
      - axis:
          <<: *lttng-tools_matrix_axis_build
      - axis:
          <<: *lttng-tools_matrix_axis_liburcu_version
      - axis:
          <<: *lttng-tools_matrix_axis_babeltrace_version
      - axis:
          type: user-defined
          name: cc
          values: '{obj:ccs}'

    <<: *lttng-tools_builders_review
    <<: *lttng-tools_publishers_defaults
    properties: *lttng-tools_properties_review_defaults
    publishers: *lttng-tools_publishers_review_defaults

- job-template:
    name: 'dev_review_lttng-tools_{version}_check-format'
    defaults: lttng-tools-review
    node: 'deb13-amd64'

    builders:
      - shell:
         !include-raw-verbatim: scripts/common/check-format.sh

    properties:
      - inject: *lttng-tools_property_inject_defaults
      - build-discarder:
          days-to-keep: 1

    publishers:
      - archive:
          artifacts: 'clang-format-fixes.diff'
          allow-empty: true
      - workspace-cleanup: *lttng-tools_publisher_workspace-cleanup_defaults

- job-template:
    name: lttng-tools_{version}_release
    defaults: lttng-tools
    node: 'deb13-amd64'

    triggers:
      - pollscm:
          cron: "@daily"

    scm:
      - git:
          url: https://github.com/{github_user}/lttng-tools.git
          browser: githubweb
          browser-url: https://github.com/{github_user}/lttng-tools
          refspec: '+refs/tags/*:refs/remotes/origin/tags/*'
          branches:
            - '*/tags/{version}.*'
          basedir: src/lttng-tools

    builders:
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: 'liburcu_{urcuversion}_linuxbuild/platform=deb13-amd64,conf=std,build=std'
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: 'babeltrace_{babelversion}_linuxbuild/platform=deb13-amd64,conf=std,build=std'
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: 'lttng-ust_{ustversion}_linuxbuild/liburcu_version={urcuversion},platform=deb13-amd64,conf=agents,build=std'
      - shell:
          !include-raw-verbatim: scripts/lttng-tools/prebuild_clean_processes_coredumps.sh
      - shell:
          !include-raw-verbatim: scripts/lttng-tools/release.sh

    publishers:
      # On build abort (timeout), wait 10 seconds before running the other post
      # build scripts, this will allow the processes to terminate and make the
      # build log more legible.
      - postbuildscript: *lttng-tools_publisher_postbuildscript_wait_10_seconds_on_abort

      # On build failure, try to get partial tap results if any exists
      - postbuildscript: *lttng-tools_publisher_postbuildscript_collect_tap_on_failure

      # If there are leftover lttng processes or core files present, kill the
      # processes, collect the core files, delete them and mark the build
      # unstable.
      - postbuildscript: *lttng-tools_publisher_postbuildscript_clean_processes_coredumps

      - tap: *lttng-tools_publisher_tap_defaults
      - raw: *lttng-tools_publisher_warnings-ng_defaults
      - archive:
          artifacts: 'out/**'
          allow-empty: false
          fingerprint: true
      - workspace-cleanup: *lttng-tools_publisher_workspace-cleanup_defaults
      - raw: *lttng-tools_publisher_proc-cleaner_defaults
      - ircbot: *lttng-tools_publisher_ircbot_defaults

- job-template:
    name: lttng-tools_{version}_scan-build
    defaults: lttng-tools
    node: 'deb13-amd64'

    triggers:
      - pollscm:
          cron: "@daily"

    builders:
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: 'liburcu_{urcuversion}_linuxbuild/platform=deb13-amd64,conf=std,build=std'
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: 'babeltrace_{babelversion}_linuxbuild/platform=deb13-amd64,conf=std,build=std'
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: 'lttng-ust_{ustversion}_linuxbuild/liburcu_version={urcuversion},platform=deb13-amd64,conf=std,build=std'
      - shell:
          !include-raw-verbatim: scripts/common/scan-build.sh

    publishers:
      - html-publisher:
          name: 'HTML Report'
          dir: 'scan-build-archive/'
          files: 'index.html'
      - ircbot: *lttng-tools_publisher_ircbot_defaults

- job-template:
    name: lttng-tools_{version}_coverity
    defaults: lttng-tools
    node: 'deb13-amd64'

    triggers:
      - pollscm:
          cron: "@daily"

    wrappers:
      - ansicolor: *lttng-tools_wrapper_ansicolor_defaults
      - timeout: *lttng-tools_wrapper_timeout_defaults
      - timestamps
      - workspace-cleanup
      - credentials-binding:
          - username-password-separated:
              credential-id: lttng-tools_coverity_token
              username: COVERITY_SCAN_PROJECT_NAME
              password: COVERITY_SCAN_TOKEN

    builders:
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: 'liburcu_{urcuversion}_linuxbuild/platform=deb13-amd64,conf=std,build=std'
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: 'babeltrace_{babelversion}_linuxbuild/platform=deb13-amd64,conf=std,build=std'
      - copyartifact:
          <<: *lttng-tools_steps_copyartifact_defaults
          project: 'lttng-ust_{ustversion}_linuxbuild/liburcu_version={urcuversion},platform=deb13-amd64,conf=std,build=std'
      - shell:
          !include-raw-verbatim: scripts/common/coverity.sh

    publishers:
      - archive:
          artifacts: 'analysis-results.tgz,cov-int/**'
          allow-empty: false
      - workspace-cleanup: *lttng-tools_publisher_workspace-cleanup_defaults
      - ircbot: *lttng-tools_publisher_ircbot_defaults


## Views
- view-template:
    name: 'LTTng-tools'
    view-type: categorized
    regex: 'lttng-(docs|ivc|tools)[-_].*'
    categorization_criteria:
      - group_regex: 'lttng-tools_master_.*'
        naming_rule: 'Master'
      - group_regex: '.*_stable-2.14_.*'
        naming_rule: 'Stable 2.14'
      - group_regex: '.*_stable-2.13_.*'
        naming_rule: 'Stable 2.13'
      - group_regex: '.*_stable-2.12_.*'
        naming_rule: 'Stable 2.12'

## Projects
- project:
    name: lttng-tools-master
    email_to: 'ci-notification@lists.lttng.org, cc:jgalar@efficios.com'
    urcuversions: !!python/tuple [stable-0.15, master]
    babelversions: !!python/tuple [stable-2.1]
    platforms: !!python/tuple [deb13-amd64]
    version: 'master'
    job_properties:
      - name: LTTNG_TOOLS_PARALLEL_TESTS
        value: 'yes'
    jobs:
      # Master #
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_master_linuxbuild
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, no-ust, agents, debug-rcu, tls_fallback]
          babelversions: !!python/tuple [stable-2.0, stable-2.1, master]
          filter: '(build=="std") || ((babeltrace_version=="master" && (conf=="std" || conf=="agents" || conf=="no-ust") && liburcu_version=="master"))'
      - '{job_prefix}lttng-tools_{version}_{cctype}': &job_lttng-tools_master_clangbuild
          cctype: clangbuild
          ccs: !!python/tuple [clang-17, clang-18, clang-19]
          builds: !!python/tuple [std]
          filter: '(platform == "deb13-amd64" && cc ==~ /clang-1[7-9]/)'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_master_elbuild
          buildtype: elbuild
          confs: !!python/tuple [agents]
          java_agents: 'false'
          platforms: !!python/tuple [el8-amd64, el9-amd64, el8-arm64, el9-arm64]
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_master_portbuild
          buildtype: portbuild
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb13-ppc64el, deb13-riscv64, deb13-s390x, deb12-i386, deb13-arm64]
          confs: !!python/tuple [std, no-ust, agents]
          timeout: '45'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_master_slesbuild
          buildtype: slesbuild
          platforms: !!python/tuple [sles15sp5-amd64]
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_master_yoctobuild
          buildtype: yoctobuild
          platforms: !!python/tuple [yocto23-powerpc, yocto40-powerpc, yocto40-ppc64]
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_master_yoctobuild_extended
          buildtype: yoctobuild_extended
          babeltrace_buildtype: yoctobuild
          platforms: !!python/tuple [yocto33-amd64, yocto33-arm64]
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_master_macosbuild
          buildtype: macosbuild
          platforms: !!python/tuple [macos-arm64]
          confs: !!python/tuple [relayd-only]
          wrapper_proc_cleaner: false
      - 'lttng-tools_{version}_winbuild': &job_lttng-tools_master_winbuild
          platforms: !!python/tuple [cygwin64]
          confs: !!python/tuple [relayd-only]
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_master_long_regression
          buildtype: long_regression
          babeltrace_buildtype: linuxbuild
          urcu_buildtype: linuxbuild
          ust_buildtype: linuxbuild
          job_properties:
            - name: LTTNG_TOOLS_PARALLEL_TESTS
              value: 'yes'
            - name: LTTNG_TOOLS_RUN_TESTS_LONG_REGRESSION
              value: 'yes'
          timeout: '45'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_master_root_linuxbuild
          nodes: !!python/tuple [deb13-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '((node=="deb13-amd64-rootnode" && platform=="deb13-amd64") && (modules_aligned_access=="default" || (modules_aligned_access="force" && liburcu_version=="master")))'
          modules_aligned_access: !!python/tuple ['default', 'force']
      - '{job_prefix}lttng-tools_{version}_root_{cctype}': &job_lttng-tools_master_root_clangbuild
          cctype: clangbuild
          ccs: !!python/tuple [clang-19]
          builds: !!python/tuple [std]
          nodes: !!python/tuple [deb13-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '(node=="deb13-amd64-rootnode" && platform=="deb13-amd64" && cc=="clang-19")'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_master_root_elbuild
          buildtype: elbuild
          confs: !!python/tuple [agents]
          java_agents: 'false'
          platforms: !!python/tuple [el8-amd64]
          nodes: !!python/tuple [el8-amd64-rootnode]
          filter: '(node=="el8-amd64-rootnode" && platform=="el8-amd64")'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_master_root_portbuild
          buildtype: portbuild
          platforms: !!python/tuple [deb12-i386, deb12-armhf, deb12-arm64]
          nodes: !!python/tuple [deb12-i386-rootnode, deb12-armhf-rootnode, deb12-arm64-rootnode]
          confs: !!python/tuple [agents]
          filter: '((node=="deb12-i386-rootnode" && platform=="deb12-i386") || (node=="deb12-armhf-rootnode" && platform=="deb12-armhf") || (node=="deb12-arm64-rootnode" && platform=="deb12-arm64"))'
          timeout: '90'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_master_root_slesbuild
          buildtype: slesbuild
          platforms: !!python/tuple [sles15sp5-amd64]
          nodes: !!python/tuple [sles15sp5-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '(node=="sles15sp5-amd64-rootnode" && platform=="sles15sp5-amd64")'
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_master_root_yoctobuild_extended
          buildtype: yoctobuild_extended
          babeltrace_buildtype: yoctobuild
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
          platforms: !!python/tuple [yocto33-amd64]
          nodes: !!python/tuple [yocto33-amd64-rootnode]
          filter: '(node=="yocto33-amd64-rootnode" && platform=="yocto33-amd64")'
      - 'lttng-tools_{version}_scan-build': &job_lttng-tools_master_scan-build
          urcuversion: master
          babelversion: master
      - 'lttng-tools_{version}_coverity': &job_lttng-tools_master_coverity
          version: master
          urcuversion: master
          ustversion: master
          babelversion: master

- project:
    name: lttng-tools-stable-2.14
    email_to: 'ci-notification@lists.lttng.org, cc:jgalar@efficios.com'
    urcuversions: !!python/tuple [stable-0.14, stable-0.15, master]
    babelversions: !!python/tuple [stable-2.1]
    platforms: !!python/tuple [deb13-amd64]
    version: 'stable-2.14'
    jobs:
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-14_linuxbuild
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, no-ust, agents, debug-rcu, tls_fallback]
          babelversions: !!python/tuple [stable-2.0, stable-2.1, master]
          filter: '(build=="std") || ((babeltrace_version=="master" && (conf=="std" || conf=="agents" || conf=="no-ust") && liburcu_version=="stable-2.14"))'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-14_portbuild
          buildtype: portbuild
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb13-ppc64el, deb13-riscv64, deb13-s390x, deb12-i386, deb13-arm64]
          confs: !!python/tuple [std, no-ust, agents]
          timeout: '45'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-14_slesbuild
          buildtype: slesbuild
          platforms: !!python/tuple [sles15sp5-amd64]
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-14_elbuild
          buildtype: elbuild
          confs: !!python/tuple [agents]
          java_agents: 'false'
          platforms: !!python/tuple [el8-amd64, el9-amd64, el8-arm64, el9-arm64]
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-14_yoctobuild
          buildtype: yoctobuild
          platforms: !!python/tuple [yocto23-powerpc, yocto40-powerpc, yocto40-ppc64]
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-14_yoctobuild_extended
          buildtype: yoctobuild_extended
          babeltrace_buildtype: yoctobuild
          platforms: !!python/tuple [yocto33-amd64, yocto33-arm64]
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-14_macosbuild
          buildtype: macosbuild
          platforms: !!python/tuple [macos-arm64]
          confs: !!python/tuple [relayd-only]
          wrapper_proc_cleaner: false
      - 'lttng-tools_{version}_winbuild': &job_lttng-tools_stable-2-14_winbuild
          platforms: !!python/tuple [cygwin64]
          confs: !!python/tuple [relayd-only]
      - '{job_prefix}lttng-tools_{version}_{cctype}': &job_lttng-tools_stable-2-14_clangbuild
          cctype: clangbuild
          ccs: !!python/tuple [clang-17, clang-18, clang-19]
          builds: !!python/tuple [std]
          filter: '(platform == "deb13-amd64" && cc ==~ /clang-1[7-9]/)'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-14_long_regression
          buildtype: long_regression
          babeltrace_buildtype: linuxbuild
          urcu_buildtype: linuxbuild
          ust_buildtype: linuxbuild
          job_properties:
            - name: LTTNG_TOOLS_RUN_TESTS_LONG_REGRESSION
              value: 'yes'
          timeout: '45'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_stable-2-14_root_linuxbuild
          nodes: !!python/tuple [deb13-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '((node=="deb13-amd64-rootnode" && platform=="deb13-amd64") && (modules_aligned_access=="default" || (modules_aligned_access="force" && liburcu_version=="stable-2.14")))'
          modules_aligned_access: !!python/tuple ['default', 'force']
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_stable-2-14_root_portbuild
          buildtype: portbuild
          platforms: !!python/tuple [deb12-i386, deb12-armhf, deb12-arm64]
          nodes: !!python/tuple [deb12-i386-rootnode, deb12-armhf-rootnode, deb12-arm64-rootnode]
          confs: !!python/tuple [agents]
          filter: '((node=="deb12-i386-rootnode" && platform=="deb12-i386") || (node=="deb12-armhf-rootnode" && platform=="deb12-armhf") || (node=="deb12-arm64-rootnode" && platform=="deb12-arm64"))'
          timeout: '90'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_stable-2-14_root_slesbuild
          buildtype: slesbuild
          platforms: !!python/tuple [sles15sp5-amd64]
          nodes: !!python/tuple [sles15sp5-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '(node=="sles15sp5-amd64-rootnode" && platform=="sles15sp5-amd64")'
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_stable-2-14_root_elbuild
          buildtype: elbuild
          confs: !!python/tuple [agents]
          java_agents: 'false'
          platforms: !!python/tuple [el8-amd64]
          nodes: !!python/tuple [el8-amd64-rootnode]
          filter: '(node=="el8-amd64-rootnode" && platform=="el8-amd64")'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_stable-2-14_root_yoctobuild_extended
          buildtype: yoctobuild_extended
          babeltrace_buildtype: yoctobuild
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
          platforms: !!python/tuple [yocto33-amd64]
          nodes: !!python/tuple [yocto33-amd64-rootnode]
          filter: '(node=="yocto33-amd64-rootnode" && platform=="yocto33-amd64")'
      - '{job_prefix}lttng-tools_{version}_root_{cctype}': &job_lttng-tools_stable-2-14_root_clangbuild
          cctype: clangbuild
          ccs: !!python/tuple [clang-19]
          builds: !!python/tuple [std]
          nodes: !!python/tuple [deb13-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '(node=="deb13-amd64-rootnode" && platform=="deb13-amd64" && cc == "clang-19")'
      - 'lttng-tools_{version}_scan-build':
          urcuversion: master
          babelversion: master
      - 'lttng-tools_{version}_coverity':
          urcuversion: master
          babelversion: master
      - 'lttng-tools_{version}_release':
          version: v2.14
          ustversion: stable-2.14
          urcuversion: stable-0.15
          babelversion: stable-2.1

- project:
    name: lttng-tools-stable-2.13
    email_to: 'ci-notification@lists.lttng.org, cc:jgalar@efficios.com'
    urcuversions: !!python/tuple [stable-0.14, stable-0.15, master]
    babelversions: !!python/tuple [stable-2.1]
    platforms: !!python/tuple [deb13-amd64]
    version: 'stable-2.13'
    jobs:
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-13_linuxbuild
          builds: !!python/tuple [std, oot, dist]
          confs: !!python/tuple [std, no-ust, agents, debug-rcu, tls_fallback]
          filter: '(build=="std") || ((babeltrace_version=="stable-2.0" && (conf=="std" || conf=="agents" || conf=="no-ust") && liburcu_version=="master"))'
          urcuversions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-13_portbuild
          buildtype: portbuild
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb13-ppc64el, deb13-riscv64, deb13-s390x, deb12-i386, deb13-arm64]
          confs: !!python/tuple [std, no-ust, agents]
          urcuversions: !!python/tuple [stable-0.13]
          timeout: '45'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-13_slesbuild
          buildtype: slesbuild
          platforms: !!python/tuple [sles15sp5-amd64]
          confs: !!python/tuple [agents]
          urcuversions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-13_elbuild
          buildtype: elbuild
          confs: !!python/tuple [agents]
          java_agents: 'false'
          platforms: !!python/tuple [el8-amd64, el9-amd64, el8-arm64, el9-arm64]
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-13_yoctobuild
          buildtype: yoctobuild
          platforms: !!python/tuple [yocto23-powerpc, yocto40-powerpc, yocto40-ppc64]
          urcuversions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-13_yoctobuild_extended
          buildtype: yoctobuild_extended
          babeltrace_buildtype: yoctobuild
          platforms: !!python/tuple [yocto33-amd64, yocto33-arm64]
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-13_macosbuild
          buildtype: macosbuild
          platforms: !!python/tuple [macos-arm64]
          confs: !!python/tuple [relayd-only]
          wrapper_proc_cleaner: false
      - 'lttng-tools_{version}_winbuild': &job_lttng-tools_stable-2-13_winbuild
          platforms: !!python/tuple [cygwin64]
          confs: !!python/tuple [relayd-only]
      - '{job_prefix}lttng-tools_{version}_{cctype}': &job_lttng-tools_stable-2-13_clangbuild
          cctype: clangbuild
          ccs: !!python/tuple [clang-17, clang-18, clang-19]
          builds: !!python/tuple [std]
          filter: '(platform == "deb13-amd64" && cc ==~ /clang-1[7-9]/)'
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-13_long_regression
          buildtype: long_regression
          babeltrace_buildtype: linuxbuild
          urcu_buildtype: linuxbuild
          ust_buildtype: linuxbuild
          job_properties:
            - name: LTTNG_TOOLS_RUN_TESTS_LONG_REGRESSION
              value: 'yes'
          timeout: '45'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_stable-2-13_root_linuxbuild
          nodes: !!python/tuple [deb13-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '(node=="deb13-amd64-rootnode" && platform == "deb13-amd64")'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_stable-2-13_root_portbuild
          buildtype: portbuild
          platforms: !!python/tuple [deb12-i386, deb12-armhf, deb12-arm64]
          nodes: !!python/tuple [deb12-i386-rootnode, deb12-armhf-rootnode, deb12-arm64-rootnode]
          confs: !!python/tuple [agents]
          filter: '((node=="deb12-i386-rootnode" && platform=="deb12-i386") || (node=="deb12-armhf-rootnode" && platform=="deb12-armhf") || (node=="deb12-arm64-rootnode" && platform=="deb12-arm64"))'
          timeout: '90'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_stable-2-13_root_slesbuild
          buildtype: slesbuild
          platforms: !!python/tuple [sles15sp5-amd64]
          nodes: !!python/tuple [sles15sp5-amd64-rootnode]
          confs: !!python/tuple [agents]
          urcuversions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          filter: '(node=="sles15sp5-amd64-rootnode" && platform=="sles15sp5-amd64")'
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_stable-2-13_root_elbuild
          buildtype: elbuild
          confs: !!python/tuple [agents]
          java_agents: 'false'
          platforms: !!python/tuple [el8-amd64]
          nodes: !!python/tuple [el8-amd64-rootnode]
          filter: '(node=="el8-amd64-rootnode" && platform=="el8-amd64")'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}': &job_lttng-tools_stable-2-13_root_yoctobuild_extended
          buildtype: yoctobuild_extended
          babeltrace_buildtype: yoctobuild
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
          platforms: !!python/tuple [yocto33-amd64]
          nodes: !!python/tuple [yocto33-amd64-rootnode]
          filter: '(node=="yocto33-amd64-rootnode" && platform=="yocto33-amd64")'
      - '{job_prefix}lttng-tools_{version}_root_{cctype}': &job_lttng-tools_stable-2-13_root_clangbuild
          cctype: clangbuild
          ccs: !!python/tuple [clang-19]
          builds: !!python/tuple [std]
          nodes: !!python/tuple [deb13-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '(node == "deb13-amd64-rootnode" && platform == "deb13-amd64" && cc == "clang-19")'
      - 'lttng-tools_{version}_release':
          version: v2.13
          urcuversion: stable-0.13
          ustversion: stable-2.13
          babelversion: stable-2.1
      - 'lttng-tools_{version}_scan-build':
          urcuversion: stable-0.13
          babelversion: stable-2.1

- project:
    name: lttng-tools-stable-2.12
    email_to: 'ci-notification@lists.lttng.org, cc:jgalar@efficios.com'
    urcuversions: !!python/tuple [stable-0.14, stable-0.15, master]
    babelversions: !!python/tuple [stable-2.1]
    platforms: !!python/tuple [deb13-amd64]
    version: 'stable-2.12'
    jobs:
      - '{job_prefix}lttng-tools_{version}_{buildtype}':
          builds: !!python/tuple [std, oot, dist]
          confs: !!python/tuple [std, no-ust, agents, debug-rcu, tls_fallback]
          urcuversions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          filter: '(build=="std") || ((babeltrace_version=="stable-2.0" && (conf=="std" || conf=="agents" || conf=="no-ust") && liburcu_version=="master"))'
      - '{job_prefix}lttng-tools_{version}_{buildtype}':
          buildtype: portbuild
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb13-ppc64el, deb13-riscv64, deb13-s390x, deb12-i386, deb13-arm64]
          confs: !!python/tuple [std, no-ust, agents]
          timeout: '45'
      - '{job_prefix}lttng-tools_{version}_{buildtype}':
          buildtype: slesbuild
          platforms: !!python/tuple [sles15sp5-amd64]
          urcuversions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_{buildtype}':
          buildtype: elbuild
          confs: !!python/tuple [agents]
          java_agents: 'false'
          platforms: !!python/tuple [el8-amd64, el9-amd64, el8-arm64, el9-arm64]
      - '{job_prefix}lttng-tools_{version}_{buildtype}':
          buildtype: elbuild_extended
          babeltrace_buildtype: elbuild
          confs: !!python/tuple [agents]
          java_agents: 'false'
          urcuversions: !!python/tuple [stable-0.12]
          platforms: !!python/tuple [el8-amd64, el9-amd64]
      - '{job_prefix}lttng-tools_{version}_{buildtype}':
          buildtype: yoctobuild
          urcuversions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          platforms: !!python/tuple [yocto23-powerpc, yocto40-powerpc, yocto40-ppc64]
      - '{job_prefix}lttng-tools_{version}_{buildtype}':
          buildtype: yoctobuild_extended
          babeltrace_buildtype: yoctobuild
          platforms: !!python/tuple [yocto33-amd64, yocto33-arm64]
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_{buildtype}':
          buildtype: macosbuild
          platforms: !!python/tuple [macos-arm64]
          confs: !!python/tuple [relayd-only]
          wrapper_proc_cleaner: false
      - 'lttng-tools_{version}_winbuild':
          platforms: !!python/tuple [cygwin64]
          confs: !!python/tuple [relayd-only]
      - '{job_prefix}lttng-tools_{version}_{buildtype}': &job_lttng-tools_stable-2-12_long_regression
          buildtype: long_regression
          babeltrace_buildtype: linuxbuild
          urcu_buildtype: linuxbuild
          ust_buildtype: linuxbuild
          job_properties:
            - name: LTTNG_TOOLS_RUN_TESTS_LONG_REGRESSION
              value: 'yes'
          timeout: '45'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}':
          nodes: !!python/tuple [deb12-amd64-rootnode-linux5]
          confs: !!python/tuple [agents]
          filter: '(node=="deb12-amd64-rootnode-linux5" && platform=="deb12-amd64")'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}':
          buildtype: slesbuild
          platforms: !!python/tuple [sles15sp5-amd64]
          nodes: !!python/tuple [sles15sp5-amd64-rootnode]
          confs: !!python/tuple [agents]
          urcuversions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
          filter: '(node=="sles15sp5-amd64-rootnode" && platform=="sles15sp5-amd64")'
          java_preferred_jdk: '8'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}':
          buildtype: elbuild
          confs: !!python/tuple [agents]
          java_agents: 'false'
          platforms: !!python/tuple [el8-amd64]
          nodes: !!python/tuple [el8-amd64-rootnode]
          builds: !!python/tuple [std]
          filter: '(node=="el8-amd64-rootnode" && platform=="el8-amd64")'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}':
          buildtype: elbuild_extended
          babeltrace_buildtype: elbuild
          confs: !!python/tuple [agents]
          java_agents: 'false'
          urcuversions: !!python/tuple [stable-0.12]
          platforms: !!python/tuple [el8-amd64]
          nodes: !!python/tuple [el8-amd64-rootnode]
          builds: !!python/tuple [std]
          filter: '(node=="el8-amd64-rootnode" && platform=="el8-amd64")'
      - '{job_prefix}lttng-tools_{version}_root_{buildtype}':
          buildtype: yoctobuild_extended
          babeltrace_buildtype: yoctobuild
          confs: !!python/tuple [agents]
          java_preferred_jdk: '8'
          urcuversions: !!python/tuple [stable-0.12]
          platforms: !!python/tuple [yocto33-amd64]
          nodes: !!python/tuple [yocto33-amd64-rootnode]
          filter: '(node=="yocto33-amd64-rootnode" && platform=="yocto33-amd64")'
      - 'lttng-tools_{version}_release':
          version: v2.12
          urcuversion: stable-0.13
          ustversion: stable-2.12
          babelversion: stable-2.1
      - 'lttng-tools_{version}_scan-build':
          urcuversion: stable-0.13
          babelversion: stable-2.1

- project:
    name: dev_jgalar_lttng-tools
    job_prefix: 'dev_jgalar_'
    user: jgalar
    github_user: jgalar
    email_to: 'jgalar@efficios.com'
    version: master-staging
    ustversion: master
    platforms: !!python/tuple [deb13-amd64]
    builds: !!python/tuple [std, oot, dist]
    confs: !!python/tuple [std, no-ust, agents]
    urcuversions: !!python/tuple [master]
    babelversions: !!python/tuple [stable-2.0, stable-2.1, master]
    jobs:
      # Master
      - 'dev_{user}_lttng-tools_{version}_{buildtype}': {}
      - 'dev_{user}_lttng-tools_{version}_{buildtype}':
          buildtype: portbuild
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb13-ppc64el, deb13-riscv64, deb13-s390x, deb12-i386, deb13-arm64]
          builds: !!python/tuple [std]
          babelversions: !!python/tuple [stable-1.5, master]
      - 'dev_{user}_lttng-tools_{version}_{buildtype}':
          buildtype: macosbuild
          platforms: !!python/tuple [macos-arm64]
          builds: !!python/tuple [std]
          confs: !!python/tuple [relayd-only]
          babelversions: !!python/tuple [stable-2.0]
          wrapper_proc_cleaner: false

      # stable-2.13
      - 'dev_{user}_lttng-tools_{version}_{buildtype}':
          version: stable-2.13-staging
          ustversion: stable-2.13
          urcuversions: !!python/tuple [stable-0.13]
      - 'dev_{user}_lttng-tools_{version}_{buildtype}':
          buildtype: portbuild
          version: stable-2.13-staging
          ustversion: stable-2.13
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb13-ppc64el, deb13-riscv64, deb13-s390x, deb12-i386, deb13-arm64]
          builds: !!python/tuple [std]
          urcuversions: !!python/tuple [stable-0.13]
          babelversions: !!python/tuple [stable-2.0]

      # stable-2.12
      - 'dev_{user}_lttng-tools_{version}_{buildtype}':
          version: stable-2.12-staging
          ustversion: stable-2.12
          urcuversions: !!python/tuple [stable-0.13]
      - 'dev_{user}_lttng-tools_{version}_{buildtype}':
          buildtype: portbuild
          version: stable-2.12-staging
          ustversion: stable-2.12
          platforms: !!python/tuple [deb12-armhf, deb12-arm64, deb13-ppc64el, deb13-riscv64, deb13-s390x, deb12-i386, deb13-arm64]
          builds: !!python/tuple [std]
          urcuversions: !!python/tuple [stable-0.13]
          babelversions: !!python/tuple [stable-2.0]

- project:
    name: review-lttng-tools-master
    version: master
    platforms: !!python/tuple [deb13-amd64]
    urcuversions: !!python/tuple [master]  # For C++ support
    babelversions: !!python/tuple [stable-2.1]
    job_properties:
      - name: LTTNG_TOOLS_PARALLEL_TESTS
        value: 'yes'
    jobs:
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_master_linuxbuild
          gerrit_approval_values: '{_gerrit_approval_fast_and_more}'
      - 'dev_review_lttng-tools_{version}_{cctype}':
          <<: *job_lttng-tools_master_clangbuild
          gerrit_approval_values: "{_gerrit_approval_fast_and_more}"
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_master_elbuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_master_portbuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_master_slesbuild
          gerrit_approval_values: "{_gerrit_approval_build_only_and_more}"
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_master_yoctobuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_master_yoctobuild_extended
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_master_macosbuild
      - 'dev_review_lttng-tools_{version}_winbuild':
          <<: *job_lttng-tools_master_winbuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_master_long_regression
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_master_root_linuxbuild
          gerrit_approval_values: "{_gerrit_approval_fast_and_more}"
      - 'dev_review_lttng-tools_{version}_root_{cctype}':
          <<: *job_lttng-tools_master_root_clangbuild
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_master_root_elbuild
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_master_root_portbuild
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_master_root_slesbuild
          gerrit_approval_values: "{_gerrit_approval_fast_and_more}"
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_master_root_yoctobuild_extended
      - 'dev_review_lttng-modules_with_lttng-tools_{version}_root_{buildtype}':
          nodes: !!python/tuple [deb13-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '((node=="deb13-amd64-rootnode" && platform=="deb13-amd64") && (modules_aligned_access=="default" || (modules_aligned_access="force" && liburcu_version=="master")))'
          modules_branch_pattern: 'master|stable-2.14'
          modules_aligned_access: !!python/tuple ['default', 'force']
          # This job is triggered by lttng-ust which doesn't use the same CI-Build levels
          gerrit_approval_values: !!python/tuple [1]
      - 'dev_review_lttng-tools_{version}_{buildtype}': &job_lttng-tools_smokebuild
          builds: !!python/tuple [oot-dist]
          confs: !!python/tuple [agents]
          buildtype: 'smokebuild'
          babeltrace_buildtype: 'linuxbuild'
          urcu_buildtype: 'linuxbuild'
          ust_buildtype: 'linuxbuild'
          job_properties:
            - name: 'LTTNG_TOOLS_RUN_TESTS'
              value: 'no'
          gerrit_approval_values: !!python/tuple [1]
      - 'dev_review_lttng-tools_{version}_clang-tidy':
          confs: !!python/tuple [agents]
          gerrit_approval_values: !!python/tuple [1]
      - 'dev_review_lttng-tools_{version}_check-format':
          gerrit_approval_values: !!python/tuple [1]

- project:
    name: review-lttng-tools-stable-2.14
    version: stable-2.14
    platforms: !!python/tuple [deb13-amd64]
    babelversions: !!python/tuple [stable-2.1]
    urcuversions: !!python/tuple [master]
    jobs:
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_linuxbuild
          gerrit_approval_values: '{_gerrit_approval_fast_and_more}'
      - 'dev_review_lttng-tools_{version}_{cctype}':
          <<: *job_lttng-tools_stable-2-14_clangbuild
          gerrit_approval_values: '{_gerrit_approval_fast_and_more}'
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_elbuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_portbuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_slesbuild
          gerrit_approval_values: '{_gerrit_approval_build_only_and_more}'
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_yoctobuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_yoctobuild_extended
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_macosbuild
      - 'dev_review_lttng-tools_{version}_winbuild':
          <<: *job_lttng-tools_stable-2-14_winbuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_long_regression
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_root_linuxbuild
          gerrit_approval_values: '{_gerrit_approval_fast_and_more}'
      - 'dev_review_lttng-tools_{version}_root_{cctype}':
          <<: *job_lttng-tools_stable-2-14_root_clangbuild
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_root_elbuild
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_root_portbuild
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_root_slesbuild
          gerrit_approval_values: '{_gerrit_approval_fast_and_more}'
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_stable-2-14_root_yoctobuild_extended
      - 'dev_review_lttng-modules_with_lttng-tools_{version}_root_{buildtype}':
          nodes: !!python/tuple [deb13-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '((node=="deb13-amd64-rootnode" && platform=="deb13-amd64") && (modules_aligned_access=="default" || (modules_aligned_access="force" && liburcu_version=="master")))'
          modules_branch_pattern: 'stable-2.14'
          modules_aligned_access: !!python/tuple ['default', 'force']
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_smokebuild
      - 'dev_review_lttng-tools_{version}_clang-tidy':
          confs: !!python/tuple [agents]
          gerrit_approval_values: !!python/tuple [1]
      - 'dev_review_lttng-tools_{version}_check-format':
          gerrit_approval_values: !!python/tuple [1]

- project:
    name: review-lttng-tools-stable-2.13
    version: stable-2.13
    platforms: !!python/tuple [deb13-amd64]
    urcuversions: !!python/tuple [master]
    babelversions: !!python/tuple [stable-2.1]
    jobs:
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_linuxbuild
          gerrit_approval_values: '{_gerrit_approval_build_only_and_more}'
      - 'dev_review_lttng-tools_{version}_{cctype}':
          <<: *job_lttng-tools_stable-2-13_clangbuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_elbuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_slesbuild
          gerrit_approval_values: '{_gerrit_approval_build_only_and_more}'
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_yoctobuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_yoctobuild_extended
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_macosbuild
      - 'dev_review_lttng-tools_{version}_winbuild':
          <<: *job_lttng-tools_stable-2-13_winbuild
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_long_regression
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_root_linuxbuild
          gerrit_approval_values: '{_gerrit_approval_fast_and_more}'
      - 'dev_review_lttng-tools_{version}_root_{cctype}':
          <<: *job_lttng-tools_stable-2-13_root_clangbuild
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_root_elbuild
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_root_portbuild
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_root_slesbuild
          gerrit_approval_values: '{_gerrit_approval_fast_and_more}'
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          <<: *job_lttng-tools_stable-2-13_root_yoctobuild_extended
      - 'dev_review_lttng-modules_with_lttng-tools_{version}_root_{buildtype}':
          nodes: !!python/tuple [deb13-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '(node=="deb13-amd64-rootnode" && platform=="deb13-amd64")'
          modules_branch_pattern: 'stable-2.13'

- project:
    name: review-lttng-tools-stable-2.12
    version: stable-2.12
    platforms: !!python/tuple [deb13-amd64]
    urcuversions: !!python/tuple [master]
    babelversions: !!python/tuple [stable-2.1]
    # Run the few dev review jobs on any CI-Build vote as before
    gerrit_approval_values: !!python/tuple [1, 2, 3]
    jobs:
      - 'dev_review_lttng-tools_{version}_{buildtype}':
          nodes: !!python/tuple [deb13-amd64-rootnode]
          builds: !!python/tuple [std, oot, dist, oot-dist]
          confs: !!python/tuple [std, no-ust, agents]
          urcuversions: !!python/tuple [stable-0.13, stable-0.14, stable-0.15, master]
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          nodes: !!python/tuple [deb12-amd64-rootnode-linux5]
          confs: !!python/tuple [agents]
          filter: '(node=="deb12-amd64-rootnode-linux5" && platform=="deb12-amd64")'
      - 'dev_review_lttng-modules_with_lttng-tools_{version}_root_{buildtype}':
          nodes: !!python/tuple [deb12-amd64-rootnode-linux5]
          confs: !!python/tuple [agents]
          filter: '(node=="deb12-amd64-rootnode" && platform=="deb12-amd64")'
          modules_branch_pattern: 'stable-2.12'
      - 'dev_review_lttng-tools_{version}_root_{buildtype}':
          buildtype: slesbuild
          platforms: !!python/tuple [sles15sp5-amd64]
          nodes: !!python/tuple [sles15sp5-amd64-rootnode]
          confs: !!python/tuple [agents]
          filter: '(node=="sles15sp5-amd64-rootnode" && platform=="sles15sp5-amd64")'
          java_preferred_jdk: '8'


- project:
    name: lttng-tools-views
    views:
      - LTTng-tools
